/*******************************************************************************
* Copyright (c) 2006, 2010 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package nodamushi.internal.cdt.parser.sdcc;

public class SDCCParserprs implements lpg.lpgjavaruntime.ParseTable, SDCCParsersym {
    public final static int ERROR_SYMBOL = 38;
    public final int getErrorSymbol() { return ERROR_SYMBOL; }

    public final static int SCOPE_UBOUND = 52;
    public final int getScopeUbound() { return SCOPE_UBOUND; }

    public final static int SCOPE_SIZE = 53;
    public final int getScopeSize() { return SCOPE_SIZE; }

    public final static int MAX_NAME_LENGTH = 38;
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int NUM_STATES = 316;
    public final int getNumStates() { return NUM_STATES; }

    public final static int NT_OFFSET = 117;
    public final int getNtOffset() { return NT_OFFSET; }

    public final static int LA_STATE_OFFSET = 3260;
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }

    public final static int MAX_LA = 2147483647;
    public final int getMaxLa() { return MAX_LA; }

    public final static int NUM_RULES = 480;
    public final int getNumRules() { return NUM_RULES; }

    public final static int NUM_NONTERMINALS = 142;
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }

    public final static int NUM_SYMBOLS = 259;
    public final int getNumSymbols() { return NUM_SYMBOLS; }

    public final static int SEGMENT_SIZE = 8192;
    public final int getSegmentSize() { return SEGMENT_SIZE; }

    public final static int START_STATE = 2148;
    public final int getStartState() { return START_STATE; }

    public final static int IDENTIFIER_SYMBOL = 0;
    public final int getIdentifier_SYMBOL() { return IDENTIFIER_SYMBOL; }

    public final static int EOFT_SYMBOL = 115;
    public final int getEoftSymbol() { return EOFT_SYMBOL; }

    public final static int EOLT_SYMBOL = 115;
    public final int getEoltSymbol() { return EOLT_SYMBOL; }

    public final static int ACCEPT_ACTION = 2662;
    public final int getAcceptAction() { return ACCEPT_ACTION; }

    public final static int ERROR_ACTION = 2780;
    public final int getErrorAction() { return ERROR_ACTION; }

    public final static boolean BACKTRACK = true;
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int getStartSymbol() { return lhs(0); }
    public final boolean isValidForParser() { return SDCCParsersym.isValidForParser; }


    public interface IsNullable {
        public final static byte isNullable[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,1,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,1,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,1,
            0,0,0,0,0,1,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            1,0,0,0,0,0,0,0,0,1,
            0,0,0,0,0,0,1,0,0,0,
            1,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,1,1,1,
            1,0,1,0,0,0,0,1,0,0,
            0,0,0,0,0,0,0,0,1
        };
    };
    public final static byte isNullable[] = IsNullable.isNullable;
    public final boolean isNullable(int index) { return isNullable[index] != 0; }

    public interface ProsthesesIndex {
        public final static char prosthesesIndex[] = {0,
            9,3,10,11,12,14,20,21,22,23,
            24,25,26,27,28,29,30,31,32,8,
            35,6,33,49,13,40,58,87,126,127,
            128,34,38,39,41,42,43,44,103,138,
            139,92,94,96,130,5,88,90,91,93,
            7,37,95,47,56,57,59,70,69,18,
            79,89,112,105,108,109,110,111,48,61,
            71,97,104,17,46,62,63,64,65,68,
            72,102,107,19,51,52,53,54,55,60,
            66,67,76,78,86,16,36,45,50,74,
            77,81,82,84,85,98,101,115,121,122,
            124,125,129,132,133,134,135,137,141,142,
            2,15,73,75,80,83,99,100,106,113,
            114,116,117,118,119,120,123,131,136,140,
            1,4
        };
    };
    public final static char prosthesesIndex[] = ProsthesesIndex.prosthesesIndex;
    public final int prosthesesIndex(int index) { return prosthesesIndex[index]; }

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            0,0,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,3,1,
            1,4,4,3,3,2,2,4,1,0,
            1,1,2,2,2,2,2,2,2,2,
            2,4,1,4,1,3,3,3,1,3,
            3,1,3,3,1,3,3,3,3,1,
            3,3,1,3,1,3,1,3,1,3,
            1,3,1,5,1,3,3,3,3,3,
            3,3,3,3,3,3,1,1,2,1,
            0,1,3,1,1,1,1,1,1,1,
            1,3,4,3,2,4,1,2,1,1,
            1,2,5,7,5,1,0,7,2,5,
            9,8,3,2,2,2,3,2,4,2,
            2,2,2,2,1,1,1,1,2,1,
            2,2,2,1,2,2,1,2,2,1,
            2,2,1,2,2,1,3,1,3,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            6,8,0,0,1,1,3,3,3,0,
            1,0,1,2,4,2,1,1,1,3,
            1,1,2,3,7,8,0,1,0,1,
            3,1,3,1,1,1,1,1,1,3,
            1,1,1,1,1,3,1,2,2,1,
            5,3,1,3,5,1,3,1,3,2,
            4,3,5,4,6,6,3,5,1,3,
            4,5,6,0,1,2,1,3,1,1,
            3,2,1,1,1,1,2,1,2,3,
            1,1,1,3,1,2,2,2,3,4,
            5,1,1,7,3,0,0,1,1,3,
            3,4,1,1,2,3,2,3,2,1,
            0,1,2,1,1,1,1,1,2,1,
            3,6,4,2,4,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            4,2,1,1,5,3,3,1,2,1,
            1,1,1,1,1,1,4,2,4,2,
            1,1,1,3,5,1,3,1,1,1,
            2,5,3,1,2,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            -84,0,-104,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -2,-7,-111,0,-33,-11,0,0,0,0,
            0,0,-145,0,-19,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-65,-13,0,0,0,0,0,-116,
            -21,0,-267,0,-4,0,0,-22,-23,0,
            0,0,-10,0,0,0,0,0,0,0,
            -244,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-251,0,
            0,0,0,0,0,-112,0,0,0,0,
            -35,0,-29,0,0,0,0,0,0,0,
            0,0,0,0,-178,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-30,
            0,0,0,0,0,0,0,-276,0,0,
            0,0,0,0,0,-100,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-44,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-25,0,0,-24,0,0,-250,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-16,0,0,-5,-105,0,0,0,0,
            -96,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-94,0,0,0,
            0,0,0,0,0,0,0,0,-102,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-272,0,0,0,
            0,0,-118,0,0,-293,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-109,0,0,
            0,0,0,0,0,0,-26,-32,0,0,
            0,0,-43,0,0,0,0,0,-45,0,
            -133,-46,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-47,
            0,0,0,0,-107,0,0,-64,0,0,
            0,0,-126,0,0,0,-48,0,0,0,
            0,0,0,-70,0,-14,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-305,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-49,-103,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-50,0,-99,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -3,-51,0,0,0,-97,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-240,
            0,0,0,0,0,-68,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-9,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-55,0,-56,0,
            -52,0,-120,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-57,0,-62,0,-150,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-190,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-181,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -113,-182,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-36,0,-53,0,0,0,0,0,0,
            0,-192,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-58,0,0,0,-193,0,-179,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-233,-194,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-195,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-196,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-264,-197,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -198,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -275,-199,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-54,-200,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-201,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-61,-202,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-226,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-106,-227,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-108,-245,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-114,-246,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-115,-266,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-287,
            0,-134,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-85,
            0,0,0,0,0,0,0,0,0,-296,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-303,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-123,
            -187,-31,0,-204,-76,0,-77,0,-237,-308,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-27,
            -127,0,-72,0,0,0,0,0,0,0,
            0,-128,0,0,0,0,-63,0,0,0,
            0,-129,0,0,0,-79,0,0,0,0,
            -125,0,0,0,0,0,0,0,0,0,
            0,-80,0,0,-59,0,0,-130,0,0,
            0,-66,0,0,0,0,0,-143,-137,0,
            0,0,0,0,-69,-138,0,0,0,0,
            0,0,0,0,-183,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-135,
            -142,-216,0,0,0,-78,0,0,0,-140,
            0,0,0,0,-60,0,-18,0,0,0,
            0,0,0,-141,-121,0,0,0,-258,0,
            0,-28,0,0,0,0,0,0,0,0,
            -144,0,0,0,0,0,0,0,0,0,
            -136,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-185,0,0,-229,0,
            -12,-119,0,0,0,-191,0,0,-232,0,
            -297,-155,0,0,0,0,-220,0,0,0,
            -153,0,-146,0,-242,-157,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-158,0,0,0,0,0,0,0,0,
            -230,-6,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-159,0,0,0,0,
            0,0,0,0,0,-81,0,0,0,0,
            -82,-160,0,0,-207,-139,0,0,-161,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-208,-221,
            0,0,0,0,-131,-162,0,0,0,0,
            0,0,0,0,0,0,0,-217,0,0,
            -90,0,-132,0,0,0,0,0,0,0,
            0,0,0,0,-225,0,0,0,0,-147,
            0,-148,-163,0,-219,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -156,0,0,0,0,0,-259,0,0,0,
            0,-164,-252,-149,0,-165,0,0,0,0,
            0,0,0,-184,0,0,0,0,-280,0,
            0,-151,0,0,-279,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -282,0,0,0,0,0,-166,0,0,0,
            0,0,0,0,0,0,0,-203,0,0,
            0,0,-283,0,0,-167,0,0,0,-295,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-312,0,0,-177,0,0,
            -101,-189,0,0,0,0,0,0,0,0,
            0,-223,0,0,0,0,-314,0,0,-168,
            0,0,-180,-238,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-316,0,
            0,-263,0,0,-211,0,0,0,0,0,
            0,0,0,0,0,-239,0,0,0,0,
            -67,-205,0,0,0,0,-122,-209,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -302,-210,0,0,0,0,0,0,0,0,
            0,0,-243,0,0,0,0,0,0,-247,
            0,0,0,0,0,0,-8,0,0,0,
            0,-34,0,0,0,0,0,0,0,0,
            -254,-253,0,0,0,0,-169,0,0,0,
            0,0,-273,0,0,0,0,0,-228,0,
            0,0,0,0,0,0,-256,-1,0,0,
            -257,0,0,-260,0,-20,-236,0,0,-270,
            -265,0,0,0,0,-170,0,0,0,-307,
            0,0,0,0,-171,0,0,0,0,-268,
            -274,0,0,0,-98,0,-172,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-91,0,0,0,0,0,0,0,
            0,0,0,0,-92,0,0,0,0,0,
            0,0,0,0,0,0,-93,0,-173,0,
            0,0,0,0,0,0,0,0,-15,-174,
            -175,-186,-71,-291,-206,-213,0,0,0,-17,
            -298,0,0,-306,-277,-218,-124,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -304,0,-234,0,0,0,0,0,0,0,
            0,0,-110,-235,0,0,0,0,-284,0,
            0,0,0,0,0,0,0,-241,-249,0,
            -278,-154,0,0,0,0,0,0,-95,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-255,0,0,0,0,0,-288,0,
            0,0,0,-152,0,-294,0,0,0,0,
            0,0,-86,0,-285,0,0,0,0,0,
            0,0,-248,0,0,0,0,0,0,0,
            0,0,-301,0,0,0,0,0,0,0,
            -37,0,-286,0,0,0,0,0,0,-83,
            0,0,-38,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-300,0,-39,
            0,0,0,0,0,0,0,0,-40,0,
            -289,0,0,0,0,0,0,-87,0,0,
            0,0,0,0,0,0,-224,-313,0,0,
            -88,0,0,0,0,0,0,0,0,-188,
            -271,0,0,-299,0,0,0,0,-89,0,
            0,0,0,0,0,0,0,-292,-176,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-41,0,0,0,0,0,0,0,0,
            -42,0,0,0,0,0,0,0,0,0,
            0,0,-262,-73,0,0,0,0,0,0,
            -311,-74,0,0,0,0,-269,-75,0,0,
            0,-222,0,0,0,0,0,0,0,0,
            0,0,0,-309,0,0,0,-261,0,0,
            0,0,0,0,0,0,0,0,-315,0,
            0,-231,-290,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-117,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -310,0,0,0,0,0,0,0,-212,0,
            0,0,0,0,0,-214,-215,0,0,0,
            0,0,0,0,-281,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            121,2,142,46,46,22,22,51,51,20,
            20,1,1,3,3,3,3,4,4,4,
            5,6,6,6,6,6,6,6,6,84,
            84,96,7,7,7,7,7,7,7,7,
            7,7,7,8,8,9,9,9,9,10,
            10,10,11,11,11,12,12,12,12,12,
            13,13,13,14,14,15,15,16,16,17,
            17,18,18,19,19,23,23,23,23,23,
            23,23,23,23,23,23,23,32,25,21,
            122,122,97,97,52,33,33,33,33,33,
            33,33,34,34,34,26,26,98,98,75,
            75,35,35,36,36,36,69,69,37,37,
            37,37,37,38,38,38,38,38,54,54,
            24,24,24,24,24,55,55,55,90,90,
            85,85,85,85,86,86,86,87,87,87,
            88,88,88,89,89,89,99,99,91,91,
            92,56,58,58,58,58,58,70,71,71,
            71,71,71,71,71,71,71,71,71,71,
            79,76,76,123,124,81,81,77,77,77,
            93,100,100,101,101,94,94,94,61,125,
            125,102,103,103,103,78,78,126,104,104,
            105,105,95,95,27,28,28,28,57,59,
            59,47,47,47,47,42,42,43,48,48,
            49,44,44,106,106,50,128,128,127,127,
            53,53,53,53,53,53,53,53,53,107,
            62,62,62,62,39,82,82,72,72,72,
            73,73,64,64,129,129,74,74,83,83,
            83,65,65,65,66,67,67,67,68,68,
            68,68,80,80,60,60,63,131,130,130,
            130,130,108,132,133,133,134,134,135,135,
            121,121,136,136,109,109,109,109,137,137,
            110,110,110,111,112,112,27,27,27,29,
            29,29,29,29,29,29,71,71,71,71,
            71,30,30,113,31,45,45,44,138,138,
            114,114,114,114,114,114,114,115,115,115,
            115,115,115,117,116,116,139,139,118,33,
            33,40,41,41,140,140,119,120,120,120,
            120,120,120,120,120,120,120,120,120,120,
            120,120,120,120,120,120,120,120,120,120,
            120,120,120,120,120,120,120,120,120,120,
            120,120,120,120,120,120,120,120,120,120,
            120,120,120,120,120,120,120,120,120,120,
            120,120,120,120,120,120,120,120,120,120,
            120,120,120,120,120,120,120,120,120,120,
            120,120,120,120,120,120,120,120,120,120,
            120,120,120,120,120,120,120,120,120,120,
            120,120,120,120,120,120,120,120,120,120,
            120,120,120,120,120,120,120,120,120,120,
            120,615,1772,519,17,21,18,803,1530,45,
            812,809,847,830,913,895,1001,932,1292,1114,
            75,1039,882,1264,92,887,39,1563,136,214,
            316,317,318,2176,20,234,17,21,18,803,
            43,45,812,809,847,830,913,895,1001,932,
            1292,1114,94,1177,732,540,138,135,137,161,
            735,310,763,1077,2283,1064,180,515,442,387,
            838,140,167,1967,1334,1439,314,144,147,150,
            153,1747,506,763,1726,2266,2107,553,1731,2249,
            2260,1667,136,214,316,317,318,1665,1756,1,
            136,214,316,317,318,1726,876,549,225,233,
            548,2176,20,277,17,21,18,803,43,40,
            138,135,137,161,260,1153,2283,2251,146,135,
            137,161,1924,2252,311,140,167,339,340,346,
            2257,144,147,150,153,261,506,999,848,997,
            2107,553,1731,2249,2260,1667,2176,20,211,17,
            21,18,803,43,45,812,809,847,830,913,
            2175,502,2214,20,481,17,21,18,803,43,
            45,812,809,847,830,913,895,1001,932,1292,
            1114,94,442,88,1612,882,198,1811,2098,20,
            628,17,21,18,803,1530,45,812,809,847,
            830,913,895,1001,932,1292,1114,75,365,366,
            210,282,852,350,333,763,442,545,2469,1166,
            2294,2176,20,2390,17,21,18,803,43,45,
            812,809,847,830,1976,306,1806,2176,20,931,
            17,21,18,803,43,45,812,1916,283,2176,
            20,1561,17,21,18,803,43,45,812,809,
            847,830,913,895,1001,932,2239,879,288,305,
            2346,1741,294,1138,180,1602,1948,20,628,17,
            21,18,803,1530,45,812,809,847,830,913,
            895,1001,932,1292,1114,75,289,313,234,282,
            136,214,316,317,318,1605,1397,1305,921,1682,
            225,230,548,2253,220,1560,222,224,1271,911,
            275,1413,845,1027,303,304,310,129,138,135,
            137,161,270,1901,1742,273,283,2023,1142,1561,
            618,126,88,140,167,442,2068,605,1216,144,
            147,150,153,442,506,1534,290,886,2107,553,
            1731,2249,2260,1667,1213,20,851,17,21,18,
            803,1530,45,812,809,847,830,913,895,1001,
            932,1292,1114,75,291,2117,20,282,17,21,
            18,803,1530,45,812,809,847,830,913,895,
            1001,932,1292,1114,75,1307,2176,20,282,17,
            21,18,803,43,45,812,809,847,830,913,
            895,1001,2250,1061,283,2176,20,1561,17,21,
            18,803,43,45,812,809,847,830,913,895,
            2166,1413,1320,1782,159,283,2176,20,1561,17,
            21,18,803,43,45,812,809,847,2020,1023,
            1115,128,338,340,346,292,1866,20,2067,17,
            21,18,803,1530,45,812,809,847,830,913,
            895,1001,932,1292,1114,75,503,2136,20,1675,
            17,21,18,803,43,45,812,809,847,830,
            913,895,1001,932,1292,1114,94,992,483,1077,
            188,1378,240,2233,20,2450,17,21,18,803,
            1530,45,812,809,847,830,913,895,1001,932,
            1292,1114,75,1077,187,1176,2002,2176,20,333,
            17,21,18,803,1530,45,812,809,847,830,
            913,895,1001,932,1292,1114,75,226,1899,20,
            92,17,21,18,803,1530,45,812,809,847,
            830,913,895,1001,932,1292,1114,75,356,2176,
            20,2100,17,21,18,803,43,45,812,809,
            847,830,913,895,1001,932,1292,1114,94,2160,
            332,1147,2176,20,241,17,21,18,803,43,
            45,812,809,847,830,913,895,1001,932,1292,
            1114,94,2176,20,1040,17,21,18,803,43,
            39,2024,2176,20,1756,17,21,18,803,1530,
            45,812,809,847,830,913,895,1001,932,1292,
            1114,75,993,1376,2056,86,2176,20,234,17,
            21,18,803,1530,45,812,809,847,830,913,
            895,1001,932,1292,1114,75,1476,2176,20,85,
            17,21,18,803,1530,45,812,809,847,830,
            913,895,1001,932,1292,1114,75,2157,2176,20,
            84,17,21,18,803,1530,45,812,809,847,
            830,913,895,1001,932,1292,1114,75,348,2176,
            20,83,17,21,18,803,1530,45,812,809,
            847,830,913,895,1001,932,1292,1114,75,1476,
            2176,20,82,17,21,18,803,1530,45,812,
            809,847,830,913,895,1001,932,1292,1114,75,
            2161,2176,20,81,17,21,18,803,1530,45,
            812,809,847,830,913,895,1001,932,1292,1114,
            75,1525,2176,20,80,17,21,18,803,1530,
            45,812,809,847,830,913,895,1001,932,1292,
            1114,75,1480,2176,20,79,17,21,18,803,
            1530,45,812,809,847,830,913,895,1001,932,
            1292,1114,75,2421,2176,20,78,17,21,18,
            803,1530,45,812,809,847,830,913,895,1001,
            932,1292,1114,75,774,2176,20,77,17,21,
            18,803,1530,45,812,809,847,830,913,895,
            1001,932,1292,1114,75,2468,2176,20,76,17,
            21,18,803,1530,45,812,809,847,830,913,
            895,1001,932,1292,1114,75,1253,2176,20,93,
            17,21,18,803,1530,45,812,809,847,830,
            913,895,1001,932,1292,1114,75,1304,2176,20,
            74,17,21,18,803,1530,45,812,809,847,
            830,913,895,1001,932,1292,1114,75,464,2176,
            20,2133,17,21,18,803,1530,45,812,809,
            847,830,913,895,1001,932,1292,1114,75,2252,
            2176,20,2181,17,21,18,803,43,45,812,
            809,847,830,913,895,1001,932,1292,1114,94,
            2176,20,1467,17,21,18,803,43,45,812,
            809,847,830,913,895,1001,932,1292,1114,94,
            2176,20,125,17,21,18,803,43,45,1796,
            2176,20,213,17,21,18,803,43,45,812,
            809,847,830,913,895,1001,932,1292,1114,94,
            2176,20,203,17,21,18,803,43,45,812,
            809,847,830,913,895,1001,932,1292,1114,94,
            700,666,234,1577,1184,1077,31,1077,31,634,
            2176,20,2264,17,21,18,803,43,45,812,
            809,847,830,913,895,1001,932,1292,1114,94,
            116,1368,204,467,1753,481,255,214,316,317,
            318,1334,2263,1682,225,230,548,234,219,1560,
            222,224,1466,111,87,285,442,1732,1027,96,
            160,1069,2438,763,2253,1651,109,95,97,98,
            99,100,1176,359,360,1077,189,88,236,1753,
            481,1932,442,229,763,1726,1334,110,887,1256,
            1652,2517,156,593,331,1177,1318,1591,111,87,
            797,25,1732,24,96,1177,1732,950,107,2293,
            1651,109,95,97,98,99,100,1439,359,360,
            1467,1467,541,1753,481,260,1178,354,1027,315,
            1366,1608,110,1924,2252,1002,308,1138,180,105,
            124,112,111,87,1414,1182,1732,90,96,390,
            1753,481,701,108,1651,109,95,97,98,99,
            100,1519,359,360,136,214,316,317,318,111,
            87,1077,2082,1732,1397,96,110,549,225,234,
            548,1651,109,95,97,98,99,100,1968,359,
            360,242,139,135,137,161,842,107,2093,1184,
            106,1985,1413,110,1531,228,931,141,167,1153,
            2283,1752,1265,145,148,151,154,1520,506,2572,
            1679,234,128,1627,108,696,986,2451,136,214,
            316,317,318,256,214,316,317,318,1682,225,
            230,548,1823,219,1560,222,224,278,1914,275,
            181,1413,666,2042,1532,264,149,135,137,161,
            1334,268,1901,1742,273,276,917,1682,225,230,
            548,196,219,1560,222,224,1176,28,275,265,
            1561,1176,1062,2522,1025,1467,1283,1753,1027,1183,
            268,1901,1742,273,1682,225,798,548,2344,219,
            1560,222,620,19,210,363,111,87,2012,119,
            1521,160,96,1229,2294,1072,1551,1839,1651,2256,
            95,97,98,99,100,262,359,360,1337,1753,
            1027,2176,20,1468,17,21,18,803,43,45,
            812,809,1819,156,593,1177,295,2538,111,87,
            1176,797,1176,1605,96,1391,1753,1027,675,361,
            1651,104,95,97,98,99,100,279,359,360,
            28,1424,1747,1561,1840,111,87,1445,1753,1027,
            672,96,1659,2198,1176,1027,1411,1651,102,95,
            97,98,99,100,1176,359,360,111,87,1499,
            1753,1027,1182,96,88,2198,23,1027,116,1651,
            103,95,97,98,99,100,2308,359,360,111,
            87,1553,1753,1027,277,96,88,1420,364,366,
            116,1651,120,95,97,98,99,100,1369,359,
            360,111,87,1607,1753,1027,1713,96,22,579,
            1077,297,2311,1651,115,95,97,98,99,100,
            235,359,360,111,87,1661,1753,1027,442,96,
            1739,442,1182,1027,2454,1651,2373,95,97,98,
            99,100,1176,359,360,111,87,1715,1753,1027,
            653,96,88,728,1176,1539,2187,1651,114,95,
            97,98,99,100,274,359,360,111,87,1769,
            1753,1027,771,96,1577,2198,349,481,244,1651,
            122,95,97,98,99,100,1176,359,360,111,
            87,666,442,1577,678,96,88,634,1467,1732,
            116,1651,121,95,97,98,99,100,347,359,
            360,771,1467,1577,1682,225,230,548,127,219,
            1560,222,224,234,255,214,316,317,318,1913,
            1182,2339,123,1682,225,230,548,1212,219,1560,
            222,224,2157,20,2122,17,21,18,803,41,
            160,1176,1467,1682,225,230,548,838,219,1560,
            222,224,1334,1182,136,214,316,317,318,442,
            2339,2503,1935,1929,199,201,243,1176,689,1736,
            545,1176,157,593,1176,757,666,1789,1577,2180,
            1423,1184,143,135,137,161,1540,2383,306,1951,
            1077,299,931,1973,1048,1471,280,142,167,245,
            634,1182,355,200,201,2176,20,1681,17,21,
            18,803,43,45,812,809,847,2127,1682,225,
            230,548,305,219,1560,222,224,255,214,316,
            317,318,205,2176,20,1025,17,21,18,803,
            43,45,812,809,1846,2176,20,246,17,21,
            18,803,43,45,812,809,1883,2176,20,1482,
            17,21,18,803,43,45,812,809,1912,2023,
            1536,1473,1139,1002,1115,313,1534,302,304,310,
            2041,2198,2553,1027,1182,1467,1735,2079,20,501,
            17,21,18,803,43,36,136,214,316,317,
            318,582,88,288,705,362,116,136,214,316,
            317,318,1397,1002,1477,1682,225,1582,548,1176,
            220,1560,222,1572,152,135,137,161,2256,1522,
            296,1467,775,247,2437,155,135,137,161,2176,
            20,281,17,21,18,803,43,45,812,1957,
            2534,2261,1397,1530,278,1682,225,230,548,1797,
            220,1560,222,224,1928,20,431,17,21,18,
            803,43,44,2176,20,1184,17,21,18,803,
            43,45,1812,2079,20,275,17,21,18,803,
            43,36,357,1478,2780,2780,2780,268,1901,1742,
            273,2176,20,1370,17,21,18,803,43,38,
            1073,2780,1751,2176,20,2012,17,21,18,803,
            43,37,2780,195,28,2780,182,1561,1176,248,
            2176,20,284,17,21,18,803,43,36,2176,
            20,1184,17,21,18,803,43,35,2176,20,
            2511,17,21,18,803,43,48,1687,1182,763,
            2780,2176,20,275,17,21,18,803,43,47,
            634,1687,2780,763,1467,268,1901,1742,273,2176,
            20,1726,17,21,18,803,43,46,1184,837,
            2780,763,206,267,2591,1726,1334,255,214,316,
            317,318,2195,20,298,17,21,18,803,34,
            1334,2195,20,198,17,21,18,803,33,2522,
            2780,260,2780,987,442,763,481,2780,2780,2154,
            2252,1467,442,757,481,260,2780,1006,442,2281,
            481,2780,1075,2154,2252,88,2780,198,198,1811,
            1781,118,1736,88,1176,2780,198,1811,735,88,
            763,2780,198,1811,256,214,316,317,318,1176,
            2780,2780,912,1082,763,2780,2017,1398,2780,2780,
            2780,1397,1726,193,1781,2390,2780,2780,2780,1729,
            2552,2039,1365,2390,763,275,198,2780,1880,2390,
            256,214,316,317,318,2780,1806,270,1901,1742,
            273,2198,1882,1027,2780,2780,1732,193,312,442,
            2780,1027,260,2355,2552,2780,442,442,1027,1027,
            2299,2252,88,1781,2780,442,116,1027,2780,2780,
            88,2780,2780,2780,2121,2780,309,88,88,2780,
            2780,2147,2151,2780,2780,2780,88,2780,2780,2780,
            2408,2780,2780,2780,2780,2780,194,2780,2780,2780,
            2780,2780,2780,2780,2780,2780,2780,2780,2780,2780,
            2549,2780,0,11,227,0,2788,1,0,2807,
            32,0,2806,32,0,1656,32,0,1586,32,
            0,1,2796,0,1,2795,0,1,2794,0,
            1,2793,0,1,2792,0,1,2791,0,1,
            2512,0,1,2112,0,1,591,0,1,1112,
            0,1,2381,0,1,2393,0,1,2410,0,
            1,2419,0,1,2482,0,1,2491,0,1480,
            52,0,2353,52,0,2459,49,0,711,65,
            0,1,3018,0,180,20,0,2459,51,0,
            2459,50,0,1480,54,0,2353,54,0,1480,
            53,0,2353,53,0,711,66,0,8,10,
            0,2333,119,0,1,3007,0,113,1995,0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,0,39,
            40,41,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,68,69,
            70,71,72,73,74,75,76,77,78,79,
            80,81,82,83,84,85,86,87,88,89,
            90,91,92,93,94,95,96,97,98,99,
            100,101,102,103,104,105,106,107,108,109,
            110,111,112,113,114,0,116,117,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,41,39,40,41,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,65,66,67,68,69,70,71,
            72,73,74,75,76,77,78,79,80,81,
            82,83,84,85,86,87,88,89,90,91,
            92,93,94,95,96,97,98,99,100,101,
            102,103,104,105,106,107,108,109,110,111,
            112,113,114,0,116,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,0,42,43,44,
            45,46,47,48,49,50,51,0,53,54,
            55,56,57,58,59,60,61,62,63,64,
            65,66,67,68,69,70,71,72,73,0,
            1,76,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,77,42,43,44,45,46,47,
            48,49,50,51,77,53,54,55,56,57,
            58,59,60,61,62,63,64,65,66,67,
            68,69,70,71,72,73,0,1,76,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,24,25,26,27,28,29,30,
            31,32,33,34,35,36,37,38,39,40,
            0,42,43,44,45,46,47,48,49,50,
            51,0,53,54,55,56,57,58,59,60,
            61,62,63,64,65,66,67,68,69,70,
            71,72,73,0,1,76,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,38,39,40,77,42,43,
            44,45,46,47,48,49,50,51,0,53,
            54,55,56,57,58,59,60,61,62,63,
            64,65,66,67,68,69,70,71,72,73,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,0,42,43,44,45,46,47,48,49,
            50,51,0,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,68,69,
            70,71,72,73,0,1,2,0,4,5,
            0,7,8,9,10,11,12,13,14,15,
            16,17,18,0,20,21,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,0,20,21,22,23,24,25,26,
            27,28,29,30,31,0,1,2,54,55,
            56,57,58,59,60,61,62,63,64,65,
            66,67,68,69,70,71,72,73,0,1,
            2,3,4,5,0,0,1,2,3,0,
            0,1,85,86,87,88,0,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,0,1,2,
            3,0,5,2,0,4,41,85,86,87,
            88,41,54,55,56,57,58,59,60,61,
            62,63,64,65,66,67,68,69,70,71,
            72,73,0,1,2,3,4,5,41,74,
            0,1,2,0,0,1,77,3,5,52,
            0,19,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,74,0,115,105,106,107,108,109,110,
            111,112,113,114,80,41,54,55,56,57,
            58,59,60,61,62,63,64,65,66,67,
            68,69,70,71,72,73,0,0,2,3,
            4,0,1,2,0,75,5,0,74,5,
            0,0,2,2,4,4,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,38,0,1,115,0,1,
            2,0,41,5,9,0,0,6,41,3,
            54,55,56,57,58,59,60,61,62,63,
            64,65,66,67,68,69,70,71,72,73,
            0,0,76,2,3,4,0,7,8,41,
            0,5,85,86,87,88,6,83,84,82,
            0,20,21,22,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,38,
            20,21,22,23,24,25,26,27,28,29,
            30,31,76,78,79,54,55,56,57,58,
            59,60,61,62,63,64,65,66,67,68,
            69,70,71,72,73,0,0,76,2,3,
            4,0,0,2,2,4,4,6,6,83,
            84,0,1,2,0,0,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,38,20,21,22,23,24,
            25,26,27,28,29,30,31,52,0,0,
            54,55,56,57,58,59,60,61,62,63,
            64,65,66,67,68,69,70,71,72,73,
            0,0,76,0,1,2,5,4,0,0,
            2,0,0,1,0,1,0,5,2,5,
            4,0,0,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,35,36,
            37,20,21,22,23,24,25,26,27,28,
            29,30,31,41,0,41,2,54,55,56,
            57,58,59,60,61,62,63,64,65,66,
            67,68,69,70,71,72,73,0,0,2,
            0,4,103,104,83,84,0,1,80,89,
            90,0,0,115,2,9,4,20,21,22,
            23,24,25,26,27,28,29,30,31,32,
            33,34,35,36,37,0,0,0,3,3,
            3,0,0,0,3,0,3,2,117,4,
            52,54,55,56,57,58,59,60,61,62,
            63,64,65,66,67,68,69,70,71,72,
            73,0,0,1,2,0,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,20,21,22,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,74,
            74,74,0,0,39,0,1,0,6,76,
            78,79,81,0,0,54,55,56,57,58,
            59,60,61,62,63,64,65,66,67,68,
            69,70,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,39,0,0,41,0,3,5,94,
            95,96,97,98,99,100,10,0,1,0,
            38,39,40,19,42,43,44,45,46,47,
            48,49,50,51,0,53,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,52,94,95,96,
            97,98,99,100,0,0,1,0,0,0,
            6,3,3,6,38,39,40,0,42,43,
            44,45,46,47,48,49,50,51,19,53,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            0,92,0,0,1,3,0,7,8,0,
            52,52,0,0,1,3,7,8,38,39,
            40,19,42,43,44,45,46,47,48,49,
            50,51,74,53,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,41,0,0,0,91,3,
            0,6,0,6,52,0,0,0,6,0,
            10,0,38,39,40,19,42,43,44,45,
            46,47,48,49,50,51,74,53,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,0,0,
            0,0,0,2,0,6,6,52,52,0,
            1,0,0,0,0,0,38,39,40,0,
            42,43,44,45,46,47,48,49,50,51,
            0,53,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,93,40,93,0,52,0,101,0,
            0,6,0,6,0,6,0,0,0,0,
            38,39,40,75,42,43,44,45,46,47,
            48,49,50,51,0,53,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,0,92,78,79,
            91,0,0,0,0,0,0,0,0,0,
            0,0,0,0,38,39,40,0,42,43,
            44,45,46,47,48,49,50,51,0,53,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            0,0,78,79,0,0,0,0,0,0,
            0,5,0,0,0,0,0,0,38,39,
            40,75,42,43,44,45,46,47,48,49,
            50,51,0,53,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,0,0,78,79,0,0,
            0,0,0,0,0,0,0,3,0,0,
            0,0,38,39,40,75,42,43,44,45,
            46,47,48,49,50,51,80,53,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,0,1,
            2,3,41,5,0,0,0,0,0,0,
            0,89,90,0,0,0,38,39,40,75,
            42,43,44,45,46,47,48,49,50,51,
            76,53,0,1,2,3,80,5,0,41,
            0,0,0,82,0,0,0,0,0,0,
            52,19,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            0,0,74,41,0,0,1,2,3,4,
            5,75,7,8,9,10,11,12,13,14,
            15,16,17,18,0,0,0,0,0,0,
            0,0,0,0,0,0,74,32,0,1,
            2,3,4,5,0,7,8,9,10,11,
            12,13,14,15,16,17,18,0,0,0,
            0,0,0,0,0,0,0,0,1,2,
            32,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,81,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,0,75,75,0,
            0,0,0,0,0,0,0,0,0,81,
            0,0,0,0,0,0,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,20,21,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,0,76,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,0,1,
            2,3,4,5,0,7,8,9,10,11,
            12,13,14,15,16,17,18,0,1,2,
            0,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,0,1,2,0,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,0,1,2,0,4,
            5,0,7,8,9,10,11,12,13,14,
            15,16,17,18,0,0,0,1,2,81,
            4,5,0,7,8,9,10,11,12,13,
            14,15,16,17,18,0,1,2,0,4,
            5,0,7,8,9,10,11,12,13,14,
            15,16,17,18,0,1,2,0,4,5,
            3,7,8,9,10,11,12,13,14,15,
            16,17,18,0,1,2,19,4,5,0,
            7,8,9,10,11,12,13,14,15,16,
            17,18,0,1,2,0,4,5,0,7,
            8,9,10,11,12,13,14,15,16,17,
            18,0,0,1,3,0,0,6,3,3,
            0,6,0,11,12,3,0,0,0,0,
            19,74,0,0,19,19,0,0,0,0,
            0,19,0,0,0,0,0,0,0,0,
            0,0,0,41,0,0,0,0,0,0,
            0,0,0,52,0,0,0,52,52,0,
            0,0,0,0,52,0,0,0,0,0,
            0,0,0,0,0,74,75,0,77,74,
            75,0,77,77,82,0,0,0,0,77,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,102,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            2780,3193,3188,3190,3189,3200,3194,3201,3202,3184,
            3199,3197,3198,3171,3185,3186,3187,3203,3204,3237,
            3151,3167,3179,3238,3239,3240,3241,3242,3243,3244,
            3251,3250,3172,3147,3158,3163,3166,3175,183,3253,
            3180,3192,3148,3149,3152,3153,3154,3160,3161,3162,
            3168,3174,3233,3252,3150,3155,3159,3164,3165,3169,
            3170,3177,3178,3181,3182,3183,3245,3246,3247,3248,
            3249,3157,3173,3176,3235,3220,3236,3222,3207,3208,
            3221,3234,3195,3205,3206,3209,3210,3211,3212,3213,
            3214,3215,3216,3217,3254,3255,3256,3257,3258,3259,
            3260,3156,3196,3218,3219,3223,3224,3225,3226,3227,
            3228,3229,3230,3231,3232,221,3191,2265,2780,3193,
            3188,3190,3189,3200,3194,3201,3202,3184,3199,3197,
            3198,3171,3185,3186,3187,3203,3204,3237,3151,3167,
            3179,3238,3239,3240,3241,3242,3243,3244,3251,3250,
            3172,3147,3158,3163,3166,3175,956,3253,3180,3192,
            3148,3149,3152,3153,3154,3160,3161,3162,3168,3174,
            3233,3252,3150,3155,3159,3164,3165,3169,3170,3177,
            3178,3181,3182,3183,3245,3246,3247,3248,3249,3157,
            3173,3176,3235,3220,3236,3222,3207,3208,3221,3234,
            3195,3205,3206,3209,3210,3211,3212,3213,3214,3215,
            3216,3217,3254,3255,3256,3257,3258,3259,3260,3156,
            3196,3218,3219,3223,3224,3225,3226,3227,3228,3229,
            3230,3231,3232,254,3191,2780,1,5154,2255,5153,
            1,1618,1,1,1,1,1,1,1,1,
            1,1,1,1,2789,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,2881,1863,1626,158,1462,513,1650,
            1691,1816,1619,1701,1674,811,1660,212,1845,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,11,
            2663,2787,8,2768,2768,2768,2768,2768,2768,2768,
            2768,2768,2768,2768,2768,2768,2768,2768,2768,2768,
            2768,2768,2768,2768,2768,2768,2768,2768,2768,2768,
            2768,2768,2768,2768,2768,2768,2768,2768,2768,2768,
            2768,2768,2768,854,2768,2768,2768,2768,2768,2768,
            2768,2768,2768,2768,1440,2768,2768,2768,2768,2768,
            2768,2768,2768,2768,2768,2768,2768,2768,2768,2768,
            2768,2768,2768,2768,2768,2768,2780,533,2768,2780,
            1,5154,2255,5153,1,1618,1,1,1,1,
            1,1,1,1,1,1,1,1,2789,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,2881,1863,1626,
            2780,1462,513,1650,1691,1816,1619,1701,1674,811,
            1660,1,1845,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,2780,1635,2787,2780,1,5154,2790,
            5153,1,1618,1,1,1,1,1,1,1,
            1,1,1,1,1,2789,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,2881,1863,1626,875,1462,513,
            1650,1691,1816,1619,1701,1674,811,1660,184,1845,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            2780,1,5154,2790,5153,1,1618,1,1,1,
            1,1,1,1,1,1,1,1,1,2789,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,2881,1863,
            1626,287,1462,513,1650,1691,1816,1619,1701,1674,
            811,1660,2780,1845,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,2780,2512,2791,60,2792,2410,
            2780,2393,2381,2793,2419,2491,2482,2112,2794,2795,
            2796,1112,591,2780,2995,2996,2997,3099,3100,3101,
            3102,3103,3104,3105,977,3114,2944,2945,2943,2998,
            2946,2942,62,2995,2996,2997,3099,3100,3101,3102,
            3103,3104,3105,977,3114,1,2156,3007,2949,2954,
            2953,2951,2952,2950,2955,2956,2948,2957,2958,2959,
            3107,3108,3109,3110,3106,702,856,534,2780,1,
            1,2790,1,1,2780,1,1755,2774,2786,43,
            223,1625,2237,2225,2213,1861,2780,2789,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,3087,1,250,250,
            250,186,250,4836,1,4836,956,2237,2225,2213,
            1861,956,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,2780,1,1,2790,1,1,250,2785,
            1,2156,3007,2780,1,2312,1335,2786,788,250,
            2780,2789,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            3087,250,2780,301,1314,1293,1272,1251,1230,1188,
            1209,1167,1146,1122,3039,956,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,2780,61,1,192,
            1,263,1755,3007,49,1460,1,2780,2785,2735,
            185,207,4838,4840,4838,4840,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,2977,352,1069,300,269,1755,
            3007,2780,956,254,3133,55,1,505,1490,2666,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            52,2780,192,1,191,1,51,2732,2729,956,
            230,2747,2237,2225,2213,1861,233,2441,2428,1980,
            249,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,2977,
            2995,2996,2997,3099,3100,3101,3102,3103,3104,3105,
            977,3114,2787,727,2319,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,89,2780,191,1,192,
            1,2780,2780,2791,2791,2792,2792,706,835,2441,
            2428,254,2156,3007,2780,252,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,2977,2995,2996,2997,3099,3100,
            3101,3102,3103,3104,3105,977,3114,1356,2780,73,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            63,50,192,1,2156,541,2750,2792,1,2780,
            2741,1,266,2312,269,2312,2780,1,2791,254,
            2792,253,2780,2995,2996,2997,3099,3100,3101,3102,
            3103,3104,3105,977,3114,2944,2945,2943,2998,2946,
            2942,2995,2996,2997,3099,3100,3101,3102,3103,3104,
            3105,977,3114,956,2780,956,3138,2949,2954,2953,
            2951,2952,2950,2955,2956,2948,2957,2958,2959,3107,
            3108,3109,3110,3106,702,856,534,2780,257,2791,
            2780,2792,739,2001,2441,2428,351,1092,3039,2185,
            936,2780,209,2662,2791,3133,2792,2995,2996,2997,
            3099,3100,3101,3102,3103,3104,3105,977,3114,2944,
            2945,2943,2998,2946,2942,2780,1,1,2786,2786,
            91,2780,59,2780,2784,208,2788,543,1815,543,
            561,2949,2954,2953,2951,2952,2950,2955,2956,2948,
            2957,2958,2959,3107,3108,3109,3110,3106,702,856,
            534,130,2780,2512,2791,2780,2792,2410,5005,2393,
            2381,2793,2419,2491,2482,2112,2794,2795,2796,1112,
            591,2995,2996,2997,3099,3100,3101,3102,3103,3104,
            3105,977,3114,2944,2945,2943,2998,2946,2942,2785,
            2785,91,2780,2780,3121,2780,2045,2780,1998,2787,
            727,2319,2783,337,272,2949,2954,2953,2951,2952,
            2950,2955,2956,2948,2957,2958,2959,3107,3108,3109,
            3110,3106,2780,1,5154,2790,5153,1,1618,1,
            1,1,1,1,1,1,1,1,1,1,
            1,2789,3121,2780,2780,956,65,2790,1148,1091,
            586,3122,3123,3125,3124,1418,2738,2780,2599,69,
            2881,1863,1626,2789,1462,513,1650,1691,1816,1619,
            1701,1674,811,1660,2780,1845,2780,1,5154,2790,
            5153,1,1618,1,1,1,1,1,1,1,
            1,1,1,1,1,2789,2061,1091,586,3122,
            3123,3125,3124,1418,1,2780,2606,2780,2780,2780,
            1618,2786,2790,2062,2881,1863,1626,67,1462,513,
            1650,1691,1816,1619,1701,1674,811,1660,2789,1845,
            2780,1,5154,2790,5153,1,1618,1,1,1,
            1,1,1,1,1,1,1,1,1,2789,
            54,915,1,2780,2607,2790,2780,2756,2753,53,
            2309,2081,2780,271,1875,2786,2762,2759,2881,1863,
            1626,2789,1462,513,1650,1691,1816,1619,1701,1674,
            811,1660,2785,1845,2780,1,5154,2790,5153,1,
            1618,1,1,1,1,1,1,1,1,1,
            1,1,1,2789,956,230,2780,2780,636,2790,
            66,234,2780,1618,2254,30,208,113,2139,71,
            2765,72,2881,1863,1626,2789,1462,513,1650,1691,
            1816,1619,1701,1674,811,1660,2785,1845,2780,1,
            5154,2790,5153,1,1618,1,1,1,1,1,
            1,1,1,1,1,1,1,2789,2780,42,
            2780,2780,2780,3019,30,5005,5005,2809,4446,2780,
            2615,2780,2780,119,2780,70,2881,1863,1626,68,
            1462,513,1650,1691,1816,1619,1701,1674,811,1660,
            58,1845,2780,1,5154,2790,5153,1,1618,1,
            1,1,1,1,1,1,1,1,1,1,
            1,2789,896,2771,896,190,766,190,2777,190,
            2780,186,2780,185,2780,207,2780,2780,2780,2780,
            2881,1863,1626,1858,1462,513,1650,1691,1816,1619,
            1701,1674,811,1660,57,1845,2780,1,5154,2790,
            5153,1,1618,1,1,1,1,1,1,1,
            1,1,1,1,1,2789,2780,915,727,2319,
            636,2780,2780,2780,2780,2780,2780,2780,2780,2780,
            2780,2780,2780,2780,2881,1863,1626,2780,1462,513,
            1650,1691,1816,1619,1701,1674,811,1660,56,1845,
            2780,1,5154,2790,5153,1,1618,1,1,1,
            1,1,1,1,1,1,1,1,1,2789,
            2780,2780,727,2319,2780,2780,1,2780,2780,2780,
            2780,254,2780,2780,2780,2780,2780,2780,2881,1863,
            1626,1885,1462,513,1650,1691,1816,1619,1701,1674,
            811,1660,64,1845,2780,1,5154,2790,5153,1,
            1618,1,1,1,1,1,1,1,1,1,
            1,1,1,2789,2780,2780,727,2319,2780,2780,
            2780,2780,2780,2780,286,2780,1,843,2780,2780,
            2780,293,2881,1863,1626,1377,1462,513,1650,1691,
            1816,1619,1701,1674,811,1660,3039,1845,2780,1,
            5154,2790,5153,1,1618,1,1,1,1,1,
            1,1,1,1,1,1,1,2789,1,251,
            251,251,1540,251,2780,2780,202,2780,2780,2780,
            2780,2185,936,2780,2780,2780,2881,1863,1626,1907,
            1462,513,1650,1691,1816,1619,1701,1674,811,1660,
            843,1845,20,2744,180,2744,3038,2744,2780,251,
            2780,2780,2780,2170,2780,2780,2780,2780,2780,2780,
            251,2744,180,180,180,180,180,180,180,180,
            180,180,180,180,180,180,180,180,180,180,
            2780,2780,251,2744,2780,1,2512,2791,2784,2792,
            2267,1510,2393,2381,2793,2419,2491,2482,2112,2794,
            2795,2796,1112,591,2780,2780,2780,2780,2780,2780,
            2780,2780,1,1,2780,2780,2744,1003,2780,2512,
            2791,2784,2792,2363,2780,2393,2381,2793,2419,2491,
            2482,2112,2794,2795,2796,1112,591,2780,2780,2780,
            2780,2780,2780,2780,2780,2780,2780,2780,2512,2791,
            1419,2792,2410,5005,2393,2381,2793,2419,2491,2482,
            2112,2794,2795,2796,1112,591,2783,1,2512,2791,
            29,2792,2410,5005,2393,2381,2793,2419,2491,2482,
            2112,2794,2795,2796,1112,591,131,2792,2791,2780,
            2780,2780,2780,2780,2780,2780,2780,2780,2780,2783,
            2780,2780,2780,2780,132,2780,2995,2996,2997,3099,
            3100,3101,3102,3103,3104,3105,977,3114,2944,2945,
            2943,2998,2946,2942,2995,2996,2997,3099,3100,3101,
            3102,3103,3104,3105,977,3114,2944,2945,2943,2998,
            2946,2942,133,29,2780,2780,2780,2780,2780,2780,
            2780,2780,2780,2780,2780,2780,2780,2780,2780,2780,
            134,2780,2995,2996,2997,3099,3100,3101,3102,3103,
            3104,3105,977,3114,2944,2945,2943,2998,2946,2942,
            2995,2996,2997,3099,3100,3101,3102,3103,3104,3105,
            977,3114,2944,2945,2943,2998,2946,2942,2780,2512,
            2791,2784,2792,2410,2780,2393,2381,2793,2419,2491,
            2482,2112,2794,2795,2796,1112,591,1,2512,2791,
            2780,2792,2410,5005,2393,2381,2793,2419,2491,2482,
            2112,2794,2795,2796,1112,591,2780,2512,2791,2780,
            2792,2410,5005,2393,2381,2793,2419,2491,2482,2112,
            2794,2795,2796,1112,591,2780,652,2791,2780,2792,
            2410,2780,2393,2381,2793,2419,2491,2482,2112,2794,
            2795,2796,1112,591,2780,2780,2780,2504,2791,2783,
            2792,2410,2780,2393,2381,2793,2419,2491,2482,2112,
            2794,2795,2796,1112,591,2780,2512,2791,2780,2792,
            2410,2780,2393,2381,2793,2419,2491,2482,2112,2794,
            2795,2796,1112,591,2780,2518,2791,1,2792,2410,
            117,2393,2381,2793,2419,2491,2482,2112,2794,2795,
            2796,1112,591,1,2699,2696,117,2693,2717,2780,
            2714,2711,2690,2720,2726,2723,2702,2687,2684,2681,
            2708,2705,1,2512,2791,2780,2792,2410,2780,2393,
            2381,2793,2419,2491,2482,2112,2794,2795,2796,1112,
            591,336,32,2675,232,335,236,232,231,224,
            2780,231,237,2672,2669,224,2780,2780,2780,2780,
            232,117,2780,2780,231,224,2780,2780,2780,2780,
            2780,224,2780,2780,2780,2780,2780,2780,2780,2780,
            2780,2780,2780,2678,2780,2780,2780,2780,2780,2780,
            2780,2780,2780,232,2780,2780,2780,231,224,2780,
            2780,2780,2780,2780,224,2780,2780,2780,2780,2780,
            2780,2780,2780,2780,2780,232,232,2780,232,231,
            231,2780,231,224,1537,2780,2780,2780,2780,224,
            2780,2780,2780,2780,2780,2780,2780,2780,2780,2780,
            2780,2780,2780,2780,1535
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            542,1,334,454,542,336,85,497,364,514,
            660,514,660,660,514,660,514,456,587,336,
            316,12,338,85,456,269,171,170,268,228,
            587,87,591,364,364,364,364,364,364,364,
            364,364,406,442,421,419,423,421,429,427,
            430,429,432,431,660,661,661,660,661,336,
            587,539,587,12,672,456,336,99,672,69,
            336,592,442,442,442,661,661,151,364,539,
            539,539,716,442,364,364,364,364,364,364,
            364,364,364,364,364,364,364,364,364,364,
            364,364,364,85,21,85,93,587,522,336,
            5,3,3,338,5,674,622,456,334,102,
            148,484,408,132,674,62,85,228,87,591,
            381,85,362,270,270,661,338,338,347,338,
            338,270,591,177,364,177,539,539,539,364,
            148,69,587,669,537,536,273,280,419,419,
            421,421,421,421,421,421,427,423,423,429,
            429,177,431,430,85,21,93,93,522,522,
            364,364,166,539,534,538,336,484,148,131,
            99,364,364,364,364,364,364,364,364,364,
            364,364,538,62,67,589,270,382,270,270,
            440,364,590,364,364,592,347,177,347,183,
            85,716,539,722,672,364,364,21,62,340,
            21,93,95,664,95,522,484,539,539,662,
            5,669,587,674,364,364,148,132,662,67,
            381,362,270,539,338,539,539,591,347,539,
            674,21,342,95,62,364,661,484,522,538,
            722,534,148,148,95,180,270,270,362,347,
            364,347,347,539,62,269,364,174,62,522,
            662,62,65,91,661,364,179,151,270,539,
            590,342,364,406,69,148,661,364,539,151,
            270,347,148,347,539,347
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            115,0,9,1,3,6,75,77,52,74,
            19,94,95,96,39,97,98,99,100,0,
            33,54,20,55,71,34,56,35,57,58,
            36,21,59,60,32,72,37,73,61,62,
            22,63,64,65,2,4,23,24,25,26,
            27,28,29,66,67,68,69,70,30,31,
            38,3,76,0,3,76,41,82,1,9,
            14,15,16,2,4,11,12,10,5,7,
            8,17,18,13,6,0,6,3,52,19,
            77,0,2,4,3,76,52,0,81,3,
            32,20,21,22,23,24,25,26,27,28,
            29,30,31,11,12,10,5,7,8,17,
            18,13,1,2,4,9,14,15,16,0,
            32,11,12,10,5,7,8,17,18,13,
            1,2,4,9,14,15,16,81,3,0,
            13,9,14,15,16,4,1,11,12,10,
            5,7,8,17,18,2,74,3,0,1,
            77,74,41,3,52,19,75,0,77,41,
            82,0,13,9,14,15,16,41,1,11,
            12,10,5,7,8,17,18,83,84,78,
            79,85,86,87,88,89,90,91,92,93,
            103,104,75,105,106,107,108,109,110,111,
            112,113,114,81,74,76,6,33,54,20,
            55,71,34,56,35,57,58,36,21,59,
            60,32,72,37,73,61,62,22,63,64,
            65,2,4,23,24,25,26,27,28,29,
            66,67,68,69,70,30,31,77,52,19,
            3,0,3,75,81,74,19,52,0,82,
            102,11,12,10,7,8,83,84,78,79,
            85,86,87,88,89,90,91,92,93,103,
            104,77,105,106,107,108,109,110,111,112,
            113,114,52,41,74,33,20,34,35,36,
            21,32,37,22,23,24,25,26,27,28,
            29,30,31,19,3,5,2,1,0,19,
            3,5,2,1,75,0,43,45,6,49,
            51,46,40,47,48,44,42,50,39,53,
            38,19,3,1,9,14,15,16,2,4,
            11,12,10,5,7,8,17,18,13,0,
            117,42,43,44,45,46,101,47,48,49,
            50,51,40,116,6,80,53,39,94,95,
            96,97,98,99,100,82,102,77,105,106,
            107,108,109,111,110,112,113,114,83,84,
            78,79,85,86,87,88,89,90,91,92,
            93,41,75,52,81,74,76,103,104,3,
            19,11,12,10,7,8,17,18,13,9,
            14,15,16,5,1,2,4,71,72,73,
            62,54,59,57,58,56,55,60,61,63,
            64,65,70,66,67,68,69,37,34,32,
            33,36,35,20,21,22,23,24,25,26,
            27,28,29,30,31,0,62,54,59,57,
            58,56,55,60,61,63,64,65,70,66,
            67,68,69,75,19,37,34,32,33,36,
            35,20,21,22,23,24,25,26,27,28,
            29,30,31,5,2,1,41,52,74,3,
            0,115,33,54,20,55,71,34,56,35,
            57,58,36,21,59,60,32,72,37,73,
            61,62,22,63,64,65,2,4,1,23,
            24,25,26,27,28,29,66,67,68,69,
            70,30,31,19,3,38,5,0,115,101,
            76,13,9,14,15,16,1,11,12,10,
            5,7,8,17,18,43,45,19,3,49,
            51,46,40,47,48,44,42,50,39,53,
            38,33,54,20,55,71,34,56,35,57,
            58,36,21,59,60,32,72,37,73,61,
            62,22,63,64,65,23,24,25,26,27,
            28,29,66,67,68,69,70,30,31,6,
            4,2,0,3,52,76,77,0,5,1,
            41,74,3,33,54,20,55,71,34,56,
            35,57,58,36,21,59,60,32,72,37,
            73,61,62,22,63,64,65,2,4,23,
            24,25,26,27,28,29,66,67,68,69,
            70,30,31,80,0,3,74,5,1,41,
            0,5,33,54,20,55,71,34,56,35,
            57,58,36,21,59,60,32,72,37,73,
            61,62,22,63,64,65,2,4,23,24,
            25,26,27,28,29,66,67,68,69,70,
            30,31,80,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            151,34,66,23,49,130,11,115,63,116,
            18,116,47,47,116,46,116,110,177,125,
            34,128,34,11,128,67,84,84,34,34,
            177,34,15,63,63,63,63,63,63,63,
            63,63,34,41,34,34,34,34,34,34,
            34,34,34,34,7,7,7,7,7,157,
            34,21,177,69,20,103,125,76,20,71,
            155,86,42,42,42,82,82,107,43,21,
            21,21,167,1,63,63,63,63,63,63,
            63,63,63,63,63,63,63,63,63,63,
            43,63,63,9,128,34,128,34,58,55,
            13,37,37,34,34,100,192,27,66,62,
            78,149,34,77,92,128,34,34,34,96,
            128,195,65,67,67,7,34,34,137,34,
            34,67,15,34,63,34,21,21,21,63,
            78,171,177,166,84,84,34,34,34,34,
            34,34,34,34,34,34,34,34,34,34,
            34,34,34,34,34,180,128,7,58,128,
            63,63,20,21,123,34,125,149,78,77,
            118,63,63,63,63,63,63,63,63,63,
            63,63,21,16,128,34,67,142,67,67,
            144,43,34,43,43,86,137,34,137,172,
            172,184,21,175,20,63,63,128,16,66,
            188,7,80,34,34,128,149,21,21,74,
            34,122,177,100,63,63,78,77,34,61,
            35,146,67,21,34,21,21,96,137,21,
            100,180,125,80,16,63,7,149,118,21,
            175,53,78,78,80,39,67,67,146,137,
            43,137,137,21,16,67,63,34,16,118,
            162,16,60,34,7,63,120,146,67,21,
            34,125,63,164,71,78,7,63,21,146,
            67,137,78,137,21,137
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            90,88,87,81,86,85,1,0,124,0,
            112,0,114,0,2,51,0,123,0,2,
            22,0,42,45,2,106,90,89,88,87,
            81,86,85,0,119,0,117,0,133,0,
            6,61,2,25,0,126,93,0,2,24,
            109,0,67,66,42,48,45,39,0,108,
            63,2,6,0,25,2,20,0,138,0,
            6,63,0,139,0,2,6,46,0,84,
            0,96,0,53,0,2,24,1,32,98,
            0,127,2,24,0,32,1,75,51,2,
            24,0,24,2,137,0,2,122,0,81,
            76,77,78,79,70,55,0,27,0,135,
            0,22,67,66,48,42,45,2,0,44,
            2,50,42,48,45,0,1,32,2,33,
            0,140,0,24,54,2,69,0,82,0,
            136,2,24,0,48,50,42,45,44,39,
            0,118,0,131,0,22,66,67,2,0,
            6,63,60,0,2,24,39,62,0,101,
            2,61,0,67,66,39,0,2,61,94,
            0,2,24,54,26,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            2,85,87,86,9,3,10,11,81,8,
            6,7,68,82,83,84,12,13,92,48,
            64,76,93,94,95,96,97,98,99,105,
            106,69,44,55,60,63,72,117,110,77,
            1,45,46,49,50,51,57,58,59,65,
            71,42,115,47,52,56,61,62,66,67,
            74,75,78,79,80,100,101,102,103,104,
            54,70,73,90,29,91,31,16,17,30,
            89,4,14,15,18,19,20,21,22,23,
            24,25,26,107,108,109,111,112,113,114,
            53,5,27,28,32,33,34,35,36,37,
            38,39,40,41,118,88,116
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            123,0,0,0,0,125,129,130,131,132,
            133,134,135,136,137,138,139,140,0,122,
            0,120,141,150,124,146,158,0,0,0,
            0,142,145,0,0,0,0,0,0,0,
            0,180,0,183,207,119,177,179,0,181,
            121,144,182,149,157,0,0,0,168,128,
            172,178,0,191,194,195,196,0,0,160,
            0,184,190,127,148,161,162,163,164,167,
            169,189,193,0,152,153,154,155,156,159,
            165,166,0,171,176,126,143,147,151,0,
            170,174,0,0,175,185,188,198,203,0,
            0,205,206,209,0,0,210,212,214,0,
            0,0,0,0,173,0,186,187,192,197,
            0,199,200,0,201,202,204,208,211,213,
            0,0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            125,156,135,79,89,164,46,191,21,55,
            107,21,95,1,7,31,60,103,72,146,
            200,217,224,228,72,72,204,72,11,35,
            35,64,67,112,120,67,232,40,150,211,
            211,182,142,170,170,170,170,170,16,16,
            16,16,16
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            133,133,133,38,38,133,52,197,5,5,
            38,5,100,5,5,5,5,38,38,144,
            133,5,5,38,76,100,208,85,14,38,
            38,5,70,38,5,123,5,43,153,214,
            221,185,144,172,174,176,178,180,18,18,
            26,115,26
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            78,76,78,53,53,76,60,36,45,68,
            53,44,53,115,115,30,68,53,53,94,
            26,7,6,6,53,53,19,53,44,135,
            134,66,83,53,42,59,4,108,94,8,
            6,37,94,89,88,87,86,85,45,44,
            45,50,44
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            76,76,76,81,81,76,76,101,74,74,
            81,74,9,74,74,74,74,81,81,19,
            76,74,74,81,5,9,75,32,94,81,
            81,74,1,81,74,2,74,77,2,74,
            74,40,19,2,71,72,72,62,1,1,
            1,1,1
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static char scopeStateSet[] = {
            139,139,139,37,37,139,26,11,113,41,
            37,113,37,34,34,127,41,37,37,5,
            9,48,48,48,37,37,78,37,113,1,
            3,41,43,37,113,118,48,110,5,51,
            48,11,5,140,140,140,140,140,113,113,
            113,115,113
        };
    };
    public final static char scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            169,1,95,0,139,0,169,1,94,0,
            119,162,0,255,0,159,0,1,139,0,
            189,119,1,159,0,1,119,189,139,0,
            230,1,30,0,169,41,0,163,0,249,
            119,0,77,197,0,201,247,119,6,180,
            0,168,248,0,189,119,1,183,0,189,
            119,1,0,200,1,0,179,119,0,182,
            0,224,119,41,0,5,163,0,140,32,
            224,119,41,0,32,140,163,0,140,224,
            119,32,41,0,224,119,32,41,0,140,
            163,0,140,32,41,0,140,224,119,41,
            0,140,41,0,1,119,244,139,0,176,
            1,0,164,0,201,221,119,6,118,243,
            71,0,168,0,201,221,119,6,243,71,
            0,178,0,137,0,242,119,178,0,119,
            178,0,242,137,0,217,119,6,241,118,
            240,198,0,217,119,6,240,198,0,207,
            0,196,0,195,0,194,0,193,0,187,
            0,150,46,0,40,1,142,139,137,0,
            150,139,142,1,49,0,101,150,0,215,
            119,6,0,142,104,135,0,75,140,0,
            191,1,0,139,125,0,191,1,13,0,
            139,177,0,239,1,123,0,142,41,123,
            0,142,1,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            1741,0,628,0,2503,2552,2469,0,1863,2572,
            2039,2017,1995,1973,1951,1929,1907,1679,1885,1858,
            1652,1816,1608,1563,0,875,766,678,1840,1747,
            2344,854,0,503,838,0,1901,1742,1682,1560,
            757,2522,1755,1726,2312,2390,0,2491,2482,2112,
            2363,2344,2267,896,739,636,915,2185,936,711,
            2319,727,2237,2225,2213,1861,2459,2441,2428,2353,
            1480,2419,2410,2393,2381,1112,591,1540,875,1510,
            1490,1460,1440,1419,1398,1377,1356,1335,1314,1293,
            1272,1251,1230,1209,1188,1167,1146,1122,1048,1092,
            1069,1027,513,1003,481,854,956,652,977,766,
            678,0,1665,545,757,2293,2253,2081,2042,1755,
            1531,1726,2061,2156,1782,0,2553,2517,2180,1539,
            1736,2450,2067,2260,2249,1731,553,2107,1667,763,
            481,545,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,238,141,119,253,119,223,202,30,203,
            198,204,73,72,205,71,206,207,119,1,
            2,162,159,223,245,216,165,159,209,167,
            119,161,6,13,18,17,8,7,5,10,
            12,11,123,1,127,126,129,128,131,130,
            133,132,135,134,240,210,210,243,210,179,
            156,176,119,119,1,119,52,41,1,77,
            179,119,1,1,1,102,82,1,41,230,
            191,142,178,119,8,7,84,83,5,88,
            87,86,85,78,79,10,90,89,92,91,
            104,103,93,118,6,118,6,156,5,179,
            255,95,94,100,139,119,254,119,141,32,
            140,119,124,5,119,6,180,167,161,215,
            53,39,50,42,44,48,47,40,46,51,
            49,149,6,45,43,118,191,191,239,119,
            142,139,119,1,184,183,214,118,126,126,
            128,128,128,128,127,127,130,129,129,132,
            131,142,134,133,241,119,6,119,5,156,
            1,1,1,189,141,190,119,119,140,224,
            199,114,113,112,110,111,109,108,107,106,
            105,77,244,119,6,3,117,119,142,118,
            1,1,150,1,1,119,75,169,75,139,
            139,179,200,119,1,52,75,6,217,178,
            218,119,221,118,222,156,119,169,169,119,
            139,1,119,52,224,32,140,5,52,119,
            257,171,186,142,40,142,142,215,75,189,
            119,119,119,221,201,77,52,119,199,256,
            119,179,140,140,247,119,117,186,137,139,
            1,139,139,189,217,242,75,176,201,199,
            52,201,52,249,82,41,250,137,186,142,
            150,52,75,168,77,169,82,41,186,137,
            139,101,169,139,186,139
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "[",
            "(",
            "{",
            ".",
            "->",
            "++",
            "--",
            "&",
            "*",
            "+",
            "-",
            "~",
            "!",
            "/",
            "%",
            ">>",
            "<<",
            "<",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "^",
            "|",
            "&&",
            "||",
            "?",
            ":",
            "...",
            "=",
            "*=",
            "/=",
            "%=",
            "+=",
            "-=",
            ">>=",
            "<<=",
            "&=",
            "^=",
            "|=",
            ",",
            "$empty",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "register",
            "restrict",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "integer",
            "floating",
            "charconst",
            "stringlit",
            "identifier",
            "Completion",
            "EndOfCompletion",
            "Invalid",
            "RightBracket",
            "RightParen",
            "RightBrace",
            "SemiColon",
            "__data",
            "__near",
            "__xdata",
            "__far",
            "__idata",
            "__pdata",
            "__code",
            "__bit",
            "__sfr",
            "__sfr16",
            "__sfr32",
            "__sbit",
            "__at",
            "__banked",
            "__interrupt",
            "__using",
            "__reentrant",
            "__critical",
            "__naked",
            "__wparam",
            "__shadowregs",
            "__preserves__regs",
            "__asm",
            "__endasm",
            "ERROR_TOKEN",
            "EOF_TOKEN",
            "]",
            ")",
            "}",
            ";",
            "identifier_token",
            "expression",
            "postfix_expression",
            "member_name",
            "type_id",
            "initializer_list",
            "unary_expression",
            "cast_expression",
            "multiplicative_expression",
            "additive_expression",
            "shift_expression",
            "relational_expression",
            "equality_expression",
            "and_expression",
            "exclusive_or_expression",
            "inclusive_or_expression",
            "logical_and_expression",
            "logical_or_expression",
            "assignment_expression",
            "expression_in_statement",
            "expression_list_actual",
            "constant_expression",
            "statement",
            "compound_statement",
            "block_item_list",
            "block_item",
            "declaration",
            "declaration_specifiers",
            "init_declarator_list",
            "simple_declaration_specifiers",
            "struct_or_union_declaration_sp" +
            "ecifiers",
            "elaborated_declaration_specifi" +
            "ers",
            "enum_declaration_specifiers",
            "typdef_name_declaration_specif" +
            "iers",
            "no_type_declaration_specifier",
            "type_qualifier",
            "no_type_declaration_specifiers",
            "simple_type_specifier",
            "struct_or_union_specifier",
            "elaborated_specifier",
            "enum_specifier",
            "type_name_specifier",
            "init_declarator",
            "complete_declarator",
            "initializer",
            "declarator",
            "struct_or_union",
            "struct_declaration_list",
            "struct_declaration",
            "specifier_qualifier_list",
            "struct_declarator_list",
            "complete_struct_declarator",
            "enumerator_list",
            "enumerator",
            "direct_declarator",
            "pointer_seq",
            "array_direct_declarator",
            "basic_direct_declarator",
            "knr_direct_declarator",
            "array_modifier",
            "function_direct_declarator",
            "parameter_type_list",
            "function_declarator",
            "identifier_list",
            "knr_function_declarator",
            "array_modifier_type_qualifiers",
            "type_qualifier_list",
            "parameter_list",
            "parameter_declaration",
            "complete_parameter_declarator",
            "abstract_declarator",
            "direct_abstract_declarator",
            "basic_direct_abstract_declarat" +
            "or",
            "array_direct_abstract_declarat" +
            "or",
            "initializer_seq",
            "designated_initializer",
            "designation",
            "designator_list",
            "designator",
            "external_declaration_list",
            "external_declaration",
            "declaration_list",
            "function_body",
            "absolute_address",
            "original_function_direct_decla" +
            "rator",
            "sdcc_function_attributes",
            "sdcc_function_attribute",
            "integer_token",
            "preserves_regs_args",
            "preserves_regs_arg",
            "oldasm_contents",
            "oldasm_content"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    /**
     * assert(! goto_default);
     */
    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    /**
     * assert(! shift_default);
     */
    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
