/*******************************************************************************
* Copyright (c) 2006, 2010 IBM Corporation and others.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
*     IBM Corporation - initial API and implementation
*********************************************************************************/

// This file was generated by LPG

package nodamushi.internal.cdt.parser.sdcc;

public class SDCCParserprs implements lpg.lpgjavaruntime.ParseTable, SDCCParsersym {
    public final static int ERROR_SYMBOL = 41;
    public final int getErrorSymbol() { return ERROR_SYMBOL; }

    public final static int SCOPE_UBOUND = 37;
    public final int getScopeUbound() { return SCOPE_UBOUND; }

    public final static int SCOPE_SIZE = 38;
    public final int getScopeSize() { return SCOPE_SIZE; }

    public final static int MAX_NAME_LENGTH = 38;
    public final int getMaxNameLength() { return MAX_NAME_LENGTH; }

    public final static int NUM_STATES = 316;
    public final int getNumStates() { return NUM_STATES; }

    public final static int NT_OFFSET = 117;
    public final int getNtOffset() { return NT_OFFSET; }

    public final static int LA_STATE_OFFSET = 3141;
    public final int getLaStateOffset() { return LA_STATE_OFFSET; }

    public final static int MAX_LA = 2147483647;
    public final int getMaxLa() { return MAX_LA; }

    public final static int NUM_RULES = 479;
    public final int getNumRules() { return NUM_RULES; }

    public final static int NUM_NONTERMINALS = 141;
    public final int getNumNonterminals() { return NUM_NONTERMINALS; }

    public final static int NUM_SYMBOLS = 258;
    public final int getNumSymbols() { return NUM_SYMBOLS; }

    public final static int SEGMENT_SIZE = 8192;
    public final int getSegmentSize() { return SEGMENT_SIZE; }

    public final static int START_STATE = 2125;
    public final int getStartState() { return START_STATE; }

    public final static int IDENTIFIER_SYMBOL = 0;
    public final int getIdentifier_SYMBOL() { return IDENTIFIER_SYMBOL; }

    public final static int EOFT_SYMBOL = 115;
    public final int getEoftSymbol() { return EOFT_SYMBOL; }

    public final static int EOLT_SYMBOL = 115;
    public final int getEoltSymbol() { return EOLT_SYMBOL; }

    public final static int ACCEPT_ACTION = 2637;
    public final int getAcceptAction() { return ACCEPT_ACTION; }

    public final static int ERROR_ACTION = 2662;
    public final int getErrorAction() { return ERROR_ACTION; }

    public final static boolean BACKTRACK = true;
    public final boolean getBacktrack() { return BACKTRACK; }

    public final int getStartSymbol() { return lhs(0); }
    public final boolean isValidForParser() { return SDCCParsersym.isValidForParser; }


    public interface IsNullable {
        public final static byte isNullable[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,1,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,1,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,1,0,0,
            0,0,0,0,0,0,1,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,1,0,0,0,0,0,0,0,0,
            1,0,0,0,0,0,0,1,0,0,
            0,1,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,1,1,1,1,
            0,1,0,0,0,0,1,0,0,0,
            0,0,0,0,0,0,0,1
        };
    };
    public final static byte isNullable[] = IsNullable.isNullable;
    public final boolean isNullable(int index) { return isNullable[index] != 0; }

    public interface ProsthesesIndex {
        public final static char prosthesesIndex[] = {0,
            9,3,10,11,12,14,20,21,22,23,
            24,25,26,27,8,28,29,30,31,32,
            35,6,33,49,40,58,87,126,127,128,
            13,34,38,39,41,42,43,44,103,137,
            138,92,94,96,130,5,88,90,91,93,
            7,95,47,56,57,59,70,69,18,89,
            112,37,79,105,108,109,110,111,129,48,
            61,71,97,104,46,62,63,64,65,68,
            72,102,107,17,19,51,52,53,54,55,
            60,66,67,76,78,86,16,36,45,50,
            74,77,81,82,84,85,98,101,115,121,
            122,124,125,132,133,134,136,140,141,2,
            15,73,75,80,83,99,100,106,113,114,
            116,117,118,119,120,123,131,135,139,1,
            4
        };
    };
    public final static char prosthesesIndex[] = ProsthesesIndex.prosthesesIndex;
    public final int prosthesesIndex(int index) { return prosthesesIndex[index]; }

    public interface IsKeyword {
        public final static byte isKeyword[] = {0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0
        };
    };
    public final static byte isKeyword[] = IsKeyword.isKeyword;
    public final boolean isKeyword(int index) { return isKeyword[index] != 0; }

    public interface BaseCheck {
        public final static short baseCheck[] = {0,
            0,0,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,3,1,
            1,4,4,3,3,2,2,4,1,0,
            1,1,2,2,2,2,2,2,2,2,
            2,4,1,4,1,3,3,3,1,3,
            3,1,3,3,1,3,3,3,3,1,
            3,3,1,3,1,3,1,3,1,3,
            1,3,1,5,1,3,3,3,3,3,
            3,3,3,3,3,3,1,1,2,1,
            0,1,3,1,1,1,1,1,1,1,
            1,3,4,3,2,4,1,2,1,1,
            1,2,5,7,5,1,0,7,2,5,
            9,8,3,2,2,2,3,2,4,2,
            2,2,2,2,1,1,1,1,2,1,
            2,2,2,1,2,2,1,2,2,1,
            2,2,1,2,2,1,3,1,3,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            6,8,0,0,1,1,3,3,3,0,
            1,0,1,2,4,2,1,1,1,3,
            1,1,2,3,7,8,0,1,0,1,
            3,1,3,1,1,1,1,1,1,3,
            1,1,1,1,1,3,1,2,2,1,
            5,3,1,3,5,1,3,1,3,2,
            4,3,5,4,6,6,3,5,1,3,
            4,5,6,0,1,2,1,3,1,1,
            3,2,1,1,1,1,2,1,2,3,
            1,1,1,3,1,2,2,2,3,4,
            5,1,1,7,3,0,0,1,1,3,
            3,4,1,1,2,3,2,3,2,1,
            0,1,2,1,1,1,1,1,2,1,
            3,6,4,2,4,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            4,2,1,1,5,3,3,1,2,1,
            1,1,1,1,1,1,4,2,4,2,
            1,1,3,5,1,3,1,1,1,2,
            5,3,1,2,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,-118,
            0,-7,0,0,0,0,0,0,0,0,
            0,0,0,0,-2,0,0,0,0,0,
            -21,-33,0,0,-23,0,0,0,0,0,
            -76,0,-29,0,0,0,0,0,0,-4,
            0,0,-159,0,-9,0,0,0,0,0,
            0,0,0,0,0,0,0,-75,0,-26,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-176,0,0,0,0,0,-30,
            0,0,0,0,0,0,0,0,0,0,
            0,-35,0,0,0,0,0,0,-165,0,
            -27,0,0,0,0,0,0,0,0,0,
            0,0,-24,0,0,0,0,0,0,-114,
            0,0,-258,0,0,0,0,0,0,0,
            0,-242,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-61,0,-292,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-163,0,0,0,
            0,0,0,0,0,0,0,0,0,-265,
            0,-22,0,0,-68,0,-171,0,-32,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-105,0,-135,0,-19,
            0,0,0,0,0,0,-28,-3,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-36,0,0,0,0,0,0,-69,
            0,0,-37,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-152,0,0,0,
            0,0,0,0,0,0,-50,0,-41,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-34,0,0,0,0,0,-31,-304,0,
            -305,0,-196,0,0,0,0,0,0,0,
            0,0,0,0,0,-56,0,0,0,0,
            0,-170,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-172,0,
            -11,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-13,0,0,-207,0,
            0,0,-67,0,0,-48,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-70,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-256,0,0,0,0,0,
            -243,0,0,-134,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-182,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-25,0,0,0,
            -116,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-136,0,-209,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-38,0,0,-39,0,-137,0,-43,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-58,0,-138,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-139,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-140,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -64,0,0,0,0,0,-141,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-65,0,0,0,0,0,-142,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-73,0,0,0,0,0,-143,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-84,0,0,0,0,0,-144,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-85,0,0,0,0,0,
            -145,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-86,0,0,0,0,
            0,-146,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-87,0,0,0,
            0,0,-214,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-14,0,0,
            0,0,0,-215,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-54,0,
            0,0,0,0,-252,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-88,
            0,0,0,0,0,-257,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -89,0,0,0,0,0,-272,0,-42,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-90,0,0,0,0,0,-282,-16,0,
            0,0,-284,0,-91,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-295,0,-53,0,0,0,0,
            0,0,0,0,0,0,0,0,-92,0,
            0,0,0,0,-180,-153,0,0,0,-302,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -308,0,-93,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-103,0,-52,0,0,-166,0,-44,0,
            0,0,0,0,0,0,0,0,0,-200,
            -260,0,-62,-55,0,0,0,0,0,-94,
            -101,0,0,0,-63,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-212,0,0,0,-97,-72,-155,
            -99,0,0,0,0,0,0,0,0,-100,
            0,0,0,0,-189,0,0,-213,0,0,
            0,0,-59,0,0,0,0,0,0,0,
            0,0,0,0,-45,0,0,-108,0,0,
            -109,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-286,-250,0,
            0,0,0,0,0,-82,0,0,0,0,
            0,0,0,0,-18,0,-6,-296,0,0,
            0,0,0,0,-111,0,-74,-112,0,0,
            0,0,0,0,0,0,0,-115,0,0,
            0,0,0,0,0,-125,0,0,0,0,
            0,0,-274,0,-129,-219,0,0,0,0,
            0,0,-106,0,0,0,0,-117,0,0,
            0,0,-71,0,0,-161,0,0,0,0,
            0,0,0,0,0,0,0,-107,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -126,0,0,0,0,-211,0,0,0,0,
            0,-57,0,0,0,0,0,-40,0,0,
            0,0,0,0,-128,-167,0,0,0,0,
            0,0,0,0,0,0,0,0,-96,-102,
            0,0,-49,0,0,-119,0,0,0,0,
            0,0,0,0,0,0,0,0,-270,0,
            0,0,0,0,0,-121,-20,0,0,0,
            0,0,0,0,-83,0,-210,0,0,0,
            0,0,0,0,0,0,-174,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-130,0,0,0,-110,0,0,0,0,
            0,0,-113,0,0,0,0,0,-178,0,
            0,-186,-10,-154,0,0,0,0,0,-124,
            0,0,-190,0,0,-191,-133,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,-173,-193,0,0,-255,-192,
            0,0,-216,-224,0,0,0,0,0,0,
            0,-123,0,0,0,0,0,0,0,0,
            0,-185,0,0,0,0,-251,0,0,-194,
            -179,0,0,0,0,0,0,0,-201,0,
            0,0,0,-12,-187,0,0,0,0,0,
            0,0,0,-278,0,0,-288,-266,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-202,-197,0,0,
            -280,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,-181,0,0,0,
            0,0,-188,0,0,0,-273,-281,0,0,
            -208,0,0,0,0,0,0,0,0,-225,
            0,0,0,0,-15,-279,-291,0,0,-177,
            -226,0,0,0,-312,0,0,-227,-147,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-228,-271,0,
            0,-314,0,0,-229,-148,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,-127,-230,0,0,0,-316,0,
            0,0,-175,0,0,0,0,0,0,0,
            -183,0,0,0,-131,0,0,-294,0,0,
            -262,-231,0,0,0,0,-254,0,0,0,
            0,0,0,0,0,0,0,-232,0,0,
            -169,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-233,0,0,0,0,
            -205,0,0,0,0,-234,-122,0,0,0,
            0,0,0,0,0,0,0,-47,-195,0,
            0,-235,0,-204,0,-203,-206,0,-236,-301,
            -245,0,-164,0,-221,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,-267,0,-237,-222,0,
            0,0,0,-238,0,0,0,0,-8,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-223,-239,-184,-1,0,0,0,-306,-240,
            0,-246,-241,-248,0,0,0,0,0,0,
            -17,0,0,0,0,0,-247,0,0,0,
            0,0,0,0,0,0,-249,-307,0,-51,
            -275,-261,0,0,0,0,0,0,0,0,
            0,-60,0,0,0,0,0,0,0,0,
            0,-168,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,-285,
            -293,0,0,0,0,-313,0,0,0,0,
            0,-263,-300,0,0,0,0,0,0,0,
            0,0,-160,0,-276,0,0,0,0,0,
            0,0,0,0,0,0,0,-283,-5,0,
            0,-298,-218,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -80,0,0,0,0,0,0,0,0,-162,
            0,0,0,0,0,0,0,0,0,-217,
            0,0,0,0,0,0,0,0,-220,-311,
            0,0,-77,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-132,-78,0,
            0,0,0,0,0,0,0,-149,0,0,
            0,0,0,-79,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-81,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,-98,0,-290,
            0,0,0,0,0,0,0,0,0,0,
            0,0,-156,0,-268,0,0,0,0,0,
            0,0,0,0,0,0,-299,-157,0,0,
            0,0,0,0,0,0,-303,0,-158,0,
            0,0,0,0,0,0,0,-264,0,0,
            -269,0,0,0,-95,0,0,0,0,-120,
            0,0,0,-150,0,0,0,-151,-253,0,
            0,0,0,-259,0,-309,-199,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            -315,0,0,-66,0,0,0,0,0,0,
            0,0,0,0,0,0,-287,0,0,0,
            0,0,0,-289,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,-46,0,
            0,0,0,-104,-198,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,-244,0,0,0,0,0,0,0,0,
            0,0,0,-277,0,0,0,0,-297,0,
            0,0,0,0,-310,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0
        };
    };
    public final static short baseCheck[] = BaseCheck.baseCheck;
    public final int baseCheck(int index) { return baseCheck[index]; }
    public final static short rhs[] = baseCheck;
    public final int rhs(int index) { return rhs[index]; };

    public interface BaseAction {
        public final static char baseAction[] = {
            120,2,141,46,46,22,22,51,51,15,
            15,1,1,3,3,3,3,4,4,4,
            5,6,6,6,6,6,6,6,6,85,
            85,97,7,7,7,7,7,7,7,7,
            7,7,7,8,8,9,9,9,9,10,
            10,10,11,11,11,12,12,12,12,12,
            13,13,13,14,14,16,16,17,17,18,
            18,19,19,20,20,23,23,23,23,23,
            23,23,23,23,23,23,23,32,31,21,
            121,121,98,98,62,33,33,33,33,33,
            33,33,34,34,34,25,25,99,99,75,
            75,35,35,36,36,36,70,70,37,37,
            37,37,37,38,38,38,38,38,53,53,
            24,24,24,24,24,54,54,54,91,91,
            86,86,86,86,87,87,87,88,88,88,
            89,89,89,90,90,90,100,100,92,92,
            93,55,57,57,57,57,57,71,72,72,
            72,72,72,72,72,72,72,72,72,72,
            79,76,76,122,123,81,81,77,77,77,
            94,101,101,102,102,95,95,95,63,124,
            124,103,104,104,104,78,78,125,105,105,
            106,106,96,96,26,27,27,27,56,58,
            58,47,47,47,47,42,42,43,48,48,
            49,44,44,107,107,50,127,127,126,126,
            52,52,52,52,52,52,52,52,52,108,
            60,60,60,60,39,82,82,73,73,73,
            74,74,64,64,128,128,84,84,83,83,
            83,65,65,65,66,67,67,67,68,68,
            68,68,80,80,59,59,61,130,129,129,
            129,129,109,131,132,132,133,133,134,134,
            120,120,135,135,110,110,110,110,136,136,
            111,111,111,112,113,113,26,26,26,28,
            28,28,28,28,28,28,28,28,28,72,
            72,29,29,69,30,45,45,44,137,137,
            114,114,114,114,114,114,114,115,115,115,
            115,115,115,116,116,138,138,117,33,33,
            40,41,41,139,139,118,119,119,119,119,
            119,119,119,119,119,119,119,119,119,119,
            119,119,119,119,119,119,119,119,119,119,
            119,119,119,119,119,119,119,119,119,119,
            119,119,119,119,119,119,119,119,119,119,
            119,119,119,119,119,119,119,119,119,119,
            119,119,119,119,119,119,119,119,119,119,
            119,119,119,119,119,119,119,119,119,119,
            119,119,119,119,119,119,119,119,119,119,
            119,119,119,119,119,119,119,119,119,119,
            119,119,119,119,119,119,119,119,119,119,
            119,119,119,119,119,119,119,119,119,119,
            615,1820,656,17,21,18,1144,1123,45,1165,
            1207,1186,1291,1270,1325,973,1312,1393,1359,1440,
            75,310,964,92,1414,387,136,214,316,317,
            318,2023,20,280,17,21,18,1144,43,40,
            1109,180,700,2023,20,834,17,21,18,1144,
            43,45,1165,1910,138,135,137,161,2004,20,
            2007,17,21,18,1144,41,136,214,316,317,
            318,140,167,314,1116,129,144,147,150,153,
            2155,831,505,225,233,672,2109,1753,1834,1915,
            2141,1545,732,1249,138,135,137,161,1786,2023,
            20,116,17,21,18,1144,43,45,1165,1207,
            2002,140,167,656,332,311,144,147,150,153,
            964,831,1485,972,1829,285,2109,1753,1834,1915,
            2141,1545,1937,20,1583,17,21,18,1144,1123,
            45,1165,1207,1186,1291,1270,1325,482,1312,1393,
            1359,1440,75,229,1184,282,1912,20,1583,17,
            21,18,1144,1123,45,1165,1207,1186,1291,1270,
            1325,105,1312,1393,1359,1440,75,2023,20,282,
            17,21,18,1144,43,45,1165,1207,1186,1955,
            695,283,445,1468,1419,1183,180,2023,20,661,
            17,21,18,1144,43,45,1165,1207,1186,1291,
            1270,1325,288,1312,2098,283,2170,1468,2061,211,
            234,136,214,316,317,318,313,741,2168,1022,
            1547,125,707,225,230,672,290,220,581,222,
            224,289,275,128,256,214,316,317,318,138,
            135,137,161,972,188,270,974,1707,273,769,
            2168,1897,1995,972,187,291,140,167,339,340,
            346,144,147,150,153,128,831,972,31,228,
            1648,2109,1753,1834,1915,2141,1545,1745,20,828,
            17,21,18,1144,1123,45,1165,1207,1186,1291,
            1270,1325,883,1312,1393,1359,1440,75,234,596,
            282,1966,20,1116,17,21,18,1144,1123,45,
            1165,1207,1186,1291,1270,1325,969,1312,1393,1359,
            1440,75,2023,20,282,17,21,18,1144,43,
            45,1165,1207,1186,1291,2069,283,769,1468,2023,
            20,42,17,21,18,1144,43,45,1165,1207,
            1186,1291,1270,1325,181,2104,733,159,2160,800,
            283,1346,1468,1191,25,675,1830,20,1469,17,
            21,18,1144,1123,45,1165,1207,1186,1291,1270,
            1325,292,1312,1393,1359,1440,75,740,312,1603,
            1985,20,2308,17,21,18,1144,1123,45,1165,
            1207,1186,1291,1270,1325,1116,1312,1393,1359,1440,
            75,1,240,1767,1859,20,309,17,21,18,
            1144,1123,45,1165,1207,1186,1291,1270,1325,284,
            1312,1393,1359,1440,75,2023,20,1793,17,21,
            18,1144,1123,45,1165,1207,1186,1291,1270,1325,
            733,1312,1393,1359,1440,75,205,445,92,2499,
            241,2023,20,572,17,21,18,1144,43,45,
            1165,1207,1186,1291,1270,1325,355,1312,1393,1359,
            1440,94,2023,20,1150,17,21,18,1144,1123,
            45,1165,1207,1186,1291,1270,1325,2162,1312,1393,
            1359,1440,75,893,806,86,972,189,2023,20,
            234,17,21,18,1144,1123,45,1165,1207,1186,
            1291,1270,1325,1766,1312,1393,1359,1440,75,364,
            365,85,887,1786,2023,20,277,17,21,18,
            1144,1123,45,1165,1207,1186,1291,1270,1325,769,
            1312,1393,1359,1440,75,2023,20,84,17,21,
            18,1144,1123,45,1165,1207,1186,1291,1270,1325,
            2172,1312,1393,1359,1440,75,2023,20,83,17,
            21,18,1144,1123,45,1165,1207,1186,1291,1270,
            1325,464,1312,1393,1359,1440,75,2023,20,82,
            17,21,18,1144,1123,45,1165,1207,1186,1291,
            1270,1325,2131,1312,1393,1359,1440,75,2023,20,
            81,17,21,18,1144,1123,45,1165,1207,1186,
            1291,1270,1325,894,1312,1393,1359,1440,75,2023,
            20,80,17,21,18,1144,1123,45,1165,1207,
            1186,1291,1270,1325,2152,1312,1393,1359,1440,75,
            2023,20,79,17,21,18,1144,1123,45,1165,
            1207,1186,1291,1270,1325,928,1312,1393,1359,1440,
            75,2023,20,78,17,21,18,1144,1123,45,
            1165,1207,1186,1291,1270,1325,1039,1312,1393,1359,
            1440,75,2023,20,77,17,21,18,1144,1123,
            45,1165,1207,1186,1291,1270,1325,1112,1312,1393,
            1359,1440,75,2023,20,76,17,21,18,1144,
            1123,45,1165,1207,1186,1291,1270,1325,799,1312,
            1393,1359,1440,75,2023,20,1848,17,21,18,
            1144,1123,45,1165,1207,1186,1291,1270,1325,522,
            1312,1393,1359,1440,75,2023,20,2096,17,21,
            18,1144,1123,45,1165,1207,1186,1291,1270,1325,
            1106,1312,1393,1359,1440,75,2023,20,93,17,
            21,18,1144,43,45,1165,1207,1186,1291,1270,
            1325,618,1312,1393,1359,1440,94,2023,20,1010,
            17,21,18,1144,1123,45,1165,1207,1186,1291,
            1270,1325,745,1312,1393,1359,1440,75,1116,896,
            74,226,743,2023,20,956,17,21,18,1144,
            43,45,1165,1207,1186,1291,1270,1325,213,1312,
            1393,1359,1440,94,2023,20,1010,17,21,18,
            1144,43,45,1165,1207,1186,1291,1270,1325,938,
            1312,1393,1359,1440,94,119,972,31,331,182,
            2023,20,1676,17,21,18,1144,43,45,1165,
            1207,1186,1291,1270,1325,203,1312,1393,1359,1440,
            94,2023,20,1107,17,21,18,1144,43,45,
            1165,1207,1186,1291,1270,1325,2129,1312,1393,1359,
            1440,94,1227,996,467,1598,480,2023,20,698,
            17,21,18,1144,43,45,1165,1207,2018,111,
            1709,2080,204,1075,445,87,2420,360,740,96,
            1050,236,1598,480,993,1078,1743,109,95,97,
            98,99,100,2206,358,359,111,256,214,316,
            317,318,87,24,234,740,96,110,1224,2045,
            445,2156,925,1743,109,95,97,98,99,100,
            1225,358,359,363,365,541,1598,480,1519,107,
            675,88,315,234,110,255,214,316,317,318,
            111,1794,350,769,901,1041,87,2454,1127,740,
            96,1162,1585,1441,348,895,108,1743,109,95,
            97,98,99,100,670,358,359,1102,1116,390,
            1598,480,1760,338,340,346,2042,20,110,17,
            21,18,1144,34,111,1183,180,669,1660,788,
            87,698,261,740,96,1228,634,445,1234,480,
            107,1743,109,95,97,98,99,100,1114,358,
            359,136,214,316,317,318,883,904,88,206,
            106,198,110,1656,1529,663,234,1464,1956,707,
            225,679,672,2170,219,581,222,560,1125,139,
            135,137,161,1074,108,160,2023,20,124,17,
            21,18,1144,43,45,1928,141,167,972,1991,
            2318,145,148,151,154,769,831,707,225,230,
            672,883,219,581,222,224,657,275,2408,156,
            513,1929,445,264,2047,2041,2375,540,929,242,
            268,974,1707,273,593,1010,2023,20,278,17,
            21,18,1144,43,45,1165,1207,2036,265,445,
            585,554,1365,1041,947,2415,1232,1901,707,225,
            230,672,295,219,581,222,224,1022,275,1699,
            505,225,234,672,1299,1102,445,669,2437,1000,
            2067,268,974,1707,273,2042,20,1697,17,21,
            18,1144,33,262,2201,1548,294,2023,20,2212,
            17,21,18,1144,43,45,1165,1207,1186,1291,
            1270,1325,1293,1312,1393,2130,1308,1598,925,707,
            225,230,672,2170,219,581,222,224,28,313,
            1468,111,1193,743,1083,1299,925,87,112,276,
            2138,96,2064,1328,1598,925,1288,1074,1743,1752,
            95,97,98,99,100,90,358,359,111,136,
            214,316,317,318,87,445,1680,925,96,1709,
            1385,1598,925,1074,1074,1743,104,95,97,98,
            99,100,234,358,359,111,88,146,135,137,
            161,87,445,244,925,96,2123,1405,1598,925,
            1693,2170,1743,102,95,97,98,99,100,291,
            358,359,111,88,840,445,362,925,87,243,
            22,2066,96,2132,1462,1598,925,800,1074,1743,
            103,95,97,98,99,100,88,358,359,111,
            136,214,316,317,318,87,2134,1710,2168,96,
            2007,1482,1598,925,1528,2122,1743,120,95,97,
            98,99,100,196,358,359,111,2170,149,135,
            137,161,87,445,245,925,96,1711,1539,1598,
            925,2148,127,1743,115,95,97,98,99,100,
            1152,358,359,111,88,1748,445,1116,925,87,
            445,1156,612,96,2157,1559,1598,925,963,1010,
            1743,2213,95,97,98,99,100,88,358,359,
            111,136,214,316,317,318,87,2387,965,1702,
            96,2243,1616,1598,925,744,1010,1743,114,95,
            97,98,99,100,356,358,359,111,789,152,
            135,137,161,87,1041,839,849,96,19,1636,
            1598,925,1917,2162,1743,122,95,97,98,99,
            100,2170,358,359,111,669,353,1000,972,297,
            87,1041,1080,2474,96,235,123,934,28,1000,
            1468,1743,121,95,97,98,99,100,1287,358,
            359,2023,20,279,17,21,18,1144,43,45,
            1165,1207,1186,1291,1270,2062,1289,707,225,230,
            672,1010,219,581,222,224,1442,1122,1829,707,
            225,230,672,160,219,581,222,224,669,445,
            1000,2429,1691,349,2045,2200,2144,1010,2434,1201,
            934,2170,1000,2023,20,1010,17,21,18,1144,
            43,45,1165,1207,1186,1975,2544,156,513,347,
            255,214,316,317,318,540,1074,1689,1352,1010,
            707,225,230,672,1583,219,581,222,224,1237,
            199,201,707,225,230,672,160,219,581,222,
            224,1949,1010,1596,2157,689,480,520,2200,1074,
            1614,2238,1010,1443,1010,136,214,316,317,318,
            306,1789,246,210,23,88,1431,1285,740,708,
            157,513,1430,1867,1844,116,1871,1010,972,299,
            929,2170,2166,143,135,137,161,136,214,316,
            317,318,929,200,201,296,361,2532,305,1898,
            142,167,2023,20,354,17,21,18,1144,43,
            45,1165,1207,2046,2071,155,135,137,161,1022,
            1598,434,707,225,1480,672,1074,220,581,222,
            1471,1022,1010,1425,707,225,230,672,2662,220,
            581,222,224,2023,20,2170,17,21,18,1144,
            43,45,1165,1921,274,302,304,310,2194,786,
            2549,520,2170,1790,20,495,17,21,18,1144,
            43,44,298,195,306,2662,2662,2555,2662,2662,
            2239,1888,20,708,17,21,18,1144,43,36,
            2023,20,2662,17,21,18,1144,43,45,1948,
            1888,20,2662,17,21,18,1144,43,36,888,
            2170,2411,305,2023,20,2662,17,21,18,1144,
            43,39,28,2662,1468,118,2662,247,2045,2023,
            20,278,17,21,18,1144,43,38,837,2662,
            1586,2662,2662,2662,2023,20,248,17,21,18,
            1144,43,37,2662,255,214,316,317,318,2023,
            20,275,17,21,18,1144,43,35,2662,303,
            304,310,2662,2662,268,974,1707,273,2023,20,
            1010,17,21,18,1144,43,36,2662,2662,2662,
            275,2662,2212,2023,20,1037,17,21,18,1144,
            43,48,280,268,974,1707,273,1010,2023,20,
            698,17,21,18,1144,43,47,1010,2662,2023,
            20,267,17,21,18,1144,43,46,1517,2290,
            675,1517,2662,675,1022,1043,1213,675,2662,281,
            882,2662,675,2662,445,2662,480,275,445,1032,
            480,675,1585,2662,2045,1585,1010,1122,1829,1585,
            270,974,1707,273,198,88,2662,769,198,88,
            769,1010,198,198,1292,1956,675,2662,1952,1956,
            255,214,316,317,318,2662,2662,2096,670,2662,
            2662,2375,260,1979,1292,260,675,2662,1585,260,
            2662,2360,1732,1868,2360,1732,2662,2318,1655,1732,
            2662,2318,1868,256,214,316,317,318,1585,445,
            2662,675,2662,2662,2168,957,925,675,2075,2662,
            2662,2662,2099,2662,2662,193,2467,2662,260,126,
            2662,793,2505,740,193,88,2662,1655,1732,198,
            1318,2505,2157,210,925,1887,2662,2662,260,2662,
            2662,1983,1789,1867,2157,2662,925,2397,1732,2157,
            2662,925,308,88,2662,2157,2662,925,2662,2662,
            2662,2662,2662,116,2662,88,2662,2662,1868,2662,
            88,2662,2662,2662,2662,116,88,2662,2662,2662,
            116,2662,2662,2662,2662,2662,116,2662,2662,2662,
            2662,2662,2662,2662,2662,2662,2662,2662,2662,2662,
            194,2662,2225,2662,2662,2662,2662,2662,2662,2662,
            2662,2662,2662,2662,2242,2662,2662,2662,2662,2436,
            2662,2662,2662,2662,2662,2451,2662,2662,2662,2662,
            2662,2662,2662,2662,2662,853,2662,0,11,227,
            0,2670,1,0,1,2900,0,8,10,0,
            2147,119,0,180,20,0,1,2889,0,113,
            1925,0
        };
    };
    public final static char baseAction[] = BaseAction.baseAction;
    public final int baseAction(int index) { return baseAction[index]; }
    public final static char lhs[] = baseAction;
    public final int lhs(int index) { return lhs[index]; };

    public interface TermCheck {
        public final static byte termCheck[] = {0,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,0,42,43,44,45,46,47,48,49,
            50,51,52,53,54,55,56,57,58,59,
            60,61,62,63,64,65,66,67,68,69,
            70,71,72,73,74,75,76,77,78,79,
            80,81,82,83,84,85,86,87,88,89,
            90,91,92,93,94,95,96,97,98,99,
            100,101,102,103,104,105,106,107,108,109,
            110,111,112,113,114,0,116,117,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,44,
            42,43,44,45,46,47,48,49,50,51,
            52,53,54,55,56,57,58,59,60,61,
            62,63,64,65,66,67,68,69,70,71,
            72,73,74,75,76,77,78,79,80,81,
            82,83,84,85,86,87,88,89,90,91,
            92,93,94,95,96,97,98,99,100,101,
            102,103,104,105,106,107,108,109,110,111,
            112,113,114,0,116,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,20,21,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,41,42,43,0,
            45,46,47,48,49,50,51,52,53,54,
            0,56,57,58,59,60,61,62,63,64,
            65,66,67,68,69,70,71,72,73,0,
            1,76,0,1,2,3,4,5,6,7,
            8,9,10,11,12,13,14,15,16,17,
            18,19,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,41,42,43,77,45,46,47,
            48,49,50,51,52,53,54,77,56,57,
            58,59,60,61,62,63,64,65,66,67,
            68,69,70,71,72,73,0,1,76,0,
            1,2,3,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,19,20,
            21,22,23,24,25,26,27,28,29,30,
            31,32,33,34,35,36,37,38,39,40,
            41,42,43,0,45,46,47,48,49,50,
            51,52,53,54,0,56,57,58,59,60,
            61,62,63,64,65,66,67,68,69,70,
            71,72,73,0,1,76,0,1,2,3,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,19,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,38,39,40,41,42,43,
            77,45,46,47,48,49,50,51,52,53,
            54,0,56,57,58,59,60,61,62,63,
            64,65,66,67,68,69,70,71,72,73,
            0,1,2,3,4,5,6,7,8,9,
            10,11,12,13,14,15,16,17,18,19,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,35,36,37,38,39,
            40,41,42,43,0,45,46,47,48,49,
            50,51,52,53,54,0,56,57,58,59,
            60,61,62,63,64,65,66,67,68,69,
            70,71,72,73,0,1,2,0,4,5,
            0,7,8,9,10,11,12,13,14,15,
            16,17,18,0,20,21,22,23,24,25,
            26,27,28,29,30,31,32,33,34,35,
            36,37,38,39,40,0,0,1,2,3,
            0,6,0,1,2,0,6,5,0,1,
            2,57,58,59,60,61,62,63,64,65,
            66,67,68,69,70,71,72,73,0,1,
            2,3,4,5,0,1,2,0,0,5,
            44,117,85,86,87,88,44,19,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,41,
            74,0,0,2,2,4,4,6,44,42,
            0,1,0,0,0,57,58,59,60,61,
            62,63,64,65,66,67,68,69,70,71,
            72,73,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,0,44,0,1,2,3,4,
            5,94,95,96,97,98,99,100,0,0,
            2,2,4,115,19,20,21,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            35,36,37,38,39,40,41,0,85,86,
            87,88,5,0,1,91,0,1,0,0,
            7,5,57,58,59,60,61,62,63,64,
            65,66,67,68,69,70,71,72,73,20,
            21,22,23,24,25,26,27,28,29,30,
            31,32,33,34,35,36,37,38,39,40,
            44,0,0,2,3,4,0,0,1,7,
            3,5,0,0,2,0,4,2,6,4,
            115,20,21,22,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,38,
            39,40,41,85,86,87,88,0,0,1,
            2,44,5,0,1,2,0,0,57,58,
            59,60,61,62,63,64,65,66,67,68,
            69,70,71,72,73,0,0,76,2,3,
            4,74,0,0,0,10,3,5,0,5,
            77,0,0,2,6,4,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,38,39,40,41,105,106,
            107,108,109,110,111,112,113,114,75,0,
            83,84,3,57,58,59,60,61,62,63,
            64,65,66,67,68,69,70,71,72,73,
            93,0,76,2,3,4,0,1,0,76,
            0,5,0,3,2,83,84,83,84,0,
            0,20,21,22,23,24,25,26,27,28,
            29,30,31,32,33,34,35,36,37,38,
            39,40,41,0,0,1,3,0,1,0,
            44,7,0,74,7,3,0,115,57,58,
            59,60,61,62,63,64,65,66,67,68,
            69,70,71,72,73,0,0,76,0,1,
            2,0,4,0,74,0,78,79,3,8,
            9,0,80,2,0,4,0,1,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,0,
            1,0,103,104,81,0,74,78,79,8,
            9,0,1,8,9,57,58,59,60,61,
            62,63,64,65,66,67,68,69,70,71,
            72,73,0,0,2,0,4,2,75,4,
            0,76,0,44,89,90,6,0,92,75,
            0,0,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,0,0,42,0,0,1,6,
            6,0,6,0,1,43,0,6,0,57,
            58,59,60,61,62,63,64,65,66,67,
            68,69,70,71,72,73,20,21,22,23,
            24,25,26,27,28,29,30,31,32,33,
            34,35,36,37,38,39,40,94,95,96,
            97,98,99,100,0,1,0,0,0,89,
            90,0,0,57,58,59,60,61,62,63,
            64,65,66,67,68,69,70,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,0,1,2,
            3,4,5,6,7,8,9,10,11,12,
            13,14,15,16,17,18,19,55,41,42,
            43,0,45,46,47,48,49,50,51,52,
            53,54,75,56,78,79,78,79,41,42,
            43,80,45,46,47,48,49,50,51,52,
            53,54,0,56,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,0,1,2,3,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,19,0,41,42,43,0,45,
            46,47,48,49,50,51,52,53,54,0,
            56,0,0,92,2,41,42,43,0,45,
            46,47,48,49,50,51,52,53,54,0,
            56,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            19,0,41,42,43,0,45,46,47,48,
            49,50,51,52,53,54,0,56,0,78,
            79,5,41,42,43,101,45,46,47,48,
            49,50,51,52,53,54,0,56,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,0,1,
            2,3,4,5,6,7,8,9,10,11,
            12,13,14,15,16,17,18,19,0,41,
            42,43,0,45,46,47,48,49,50,51,
            52,53,54,0,56,0,80,0,80,41,
            42,43,0,45,46,47,48,49,50,51,
            52,53,54,0,56,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,0,1,2,3,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,19,0,41,42,43,0,
            45,46,47,48,49,50,51,52,53,54,
            75,56,75,91,0,0,41,42,43,0,
            45,46,47,48,49,50,51,52,53,54,
            0,56,0,1,2,3,0,5,0,44,
            10,0,0,44,6,0,93,6,0,0,
            0,19,20,21,22,23,24,25,26,27,
            28,29,30,31,32,33,34,35,36,37,
            38,39,40,0,55,0,44,82,0,6,
            44,82,0,0,0,1,2,0,4,5,
            6,7,8,9,10,11,12,13,14,15,
            16,17,18,55,55,55,74,20,21,22,
            23,24,25,26,27,28,29,30,31,32,
            33,34,35,36,37,38,39,40,0,0,
            1,2,0,4,5,6,7,8,9,10,
            11,12,13,14,15,16,17,18,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,35,36,37,38,39,40,0,
            1,2,3,4,5,0,7,8,9,10,
            11,12,13,14,15,16,17,18,0,0,
            0,0,0,0,0,6,6,3,0,1,
            2,3,4,5,35,7,8,9,10,11,
            12,13,14,15,16,17,18,0,0,0,
            0,0,0,0,0,0,0,0,1,2,
            3,4,5,35,7,8,9,10,11,12,
            13,14,15,16,17,18,0,0,0,0,
            81,0,1,2,3,4,5,6,7,8,
            9,10,11,12,13,14,15,16,17,18,
            76,0,0,0,0,0,0,1,2,81,
            4,5,6,7,8,9,10,11,12,13,
            14,15,16,17,18,75,75,0,0,0,
            0,0,0,0,0,0,1,2,81,4,
            5,6,7,8,9,10,11,12,13,14,
            15,16,17,18,0,1,2,76,4,5,
            0,7,8,9,10,11,12,13,14,15,
            16,17,18,0,1,2,0,4,5,3,
            7,8,9,10,11,12,13,14,15,16,
            17,18,0,1,2,19,4,5,0,7,
            8,9,10,11,12,13,14,15,16,17,
            18,0,1,2,0,4,5,0,7,8,
            9,10,11,12,13,14,15,16,17,18,
            0,55,0,0,20,21,22,23,24,25,
            26,27,28,29,30,31,32,33,34,0,
            20,21,22,23,24,25,26,27,28,29,
            30,31,32,33,34,0,0,0,0,20,
            21,22,23,24,25,26,27,28,29,30,
            31,32,33,34,0,20,21,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            0,0,0,3,0,0,6,0,1,2,
            3,0,5,0,1,2,3,0,5,19,
            3,0,1,6,0,0,0,3,3,3,
            0,0,11,12,3,0,19,0,3,0,
            3,0,3,19,19,19,0,0,0,0,
            0,44,0,0,0,55,19,44,19,0,
            0,0,55,0,0,44,3,0,55,0,
            0,0,55,0,74,75,0,77,0,55,
            55,74,19,0,0,0,55,74,0,0,
            55,74,75,0,77,0,0,0,0,0,
            74,77,77,82,0,74,0,0,0,74,
            0,0,0,0,0,0,0,0,55,0,
            0,0,0,102,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,
            0
        };
    };
    public final static byte termCheck[] = TermCheck.termCheck;
    public final int termCheck(int index) { return termCheck[index]; }

    public interface TermAction {
        public final static char termAction[] = {0,
            2662,3074,3069,3071,3070,3081,3075,3065,3082,3083,
            3080,3078,3079,3052,3066,3067,3068,3084,3085,3118,
            3032,3048,3060,3119,3120,3121,3122,3123,3124,3125,
            3127,3128,3129,3132,3131,3053,3028,3039,3044,3047,
            3056,183,3134,3061,3073,3029,3030,3033,3034,3035,
            3041,3042,3043,3049,3055,3114,3133,3031,3036,3040,
            3045,3046,3050,3051,3058,3059,3062,3063,3064,3126,
            3130,3038,3054,3057,3116,3101,3117,3103,3088,3089,
            3102,3115,3076,3086,3087,3090,3091,3092,3093,3094,
            3095,3096,3097,3098,3135,3136,3137,3138,3139,3140,
            3141,3037,3077,3099,3100,3104,3105,3106,3107,3108,
            3109,3110,3111,3112,3113,221,3072,2161,2662,3074,
            3069,3071,3070,3081,3075,3065,3082,3083,3080,3078,
            3079,3052,3066,3067,3068,3084,3085,3118,3032,3048,
            3060,3119,3120,3121,3122,3123,3124,3125,3127,3128,
            3129,3132,3131,3053,3028,3039,3044,3047,3056,856,
            3134,3061,3073,3029,3030,3033,3034,3035,3041,3042,
            3043,3049,3055,3114,3133,3031,3036,3040,3045,3046,
            3050,3051,3058,3059,3062,3063,3064,3126,3130,3038,
            3054,3057,3116,3101,3117,3103,3088,3089,3102,3115,
            3076,3086,3087,3090,3091,3092,3093,3094,3095,3096,
            3097,3098,3135,3136,3137,3138,3139,3140,3141,3037,
            3077,3099,3100,3104,3105,3106,3107,3108,3109,3110,
            3111,3112,3113,254,3072,2662,1,5023,1749,5022,
            1,600,1,1,1,1,1,1,1,1,
            1,1,1,1,2671,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,2763,1412,1511,158,
            696,951,1593,1568,1736,1508,1618,1558,2504,1555,
            212,1670,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,11,
            2638,2669,8,2647,2647,2647,2647,2647,2647,2647,
            2647,2647,2647,2647,2647,2647,2647,2647,2647,2647,
            2647,2647,2647,2647,2647,2647,2647,2647,2647,2647,
            2647,2647,2647,2647,2647,2647,2647,2647,2647,2647,
            2647,2647,2647,2647,2647,2647,767,2647,2647,2647,
            2647,2647,2647,2647,2647,2647,2647,1276,2647,2647,
            2647,2647,2647,2647,2647,2647,2647,2647,2647,2647,
            2647,2647,2647,2647,2647,2647,2662,1505,2647,2662,
            1,5023,1749,5022,1,600,1,1,1,1,
            1,1,1,1,1,1,1,1,2671,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            2763,1412,1511,2662,696,951,1593,1568,1736,1508,
            1618,1558,2504,1555,1,1670,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,2662,1974,2669,2662,1,5023,2672,
            5022,1,600,1,1,1,1,1,1,1,
            1,1,1,1,1,2671,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,2763,1412,1511,
            791,696,951,1593,1568,1736,1508,1618,1558,2504,
            1555,184,1670,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            2662,1,5023,2672,5022,1,600,1,1,1,
            1,1,1,1,1,1,1,1,1,2671,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,2763,1412,1511,1,696,951,1593,1568,1736,
            1508,1618,1558,2504,1555,287,1670,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,2662,1557,2673,60,2674,2358,
            2662,2675,2324,2309,2339,1705,1536,538,2676,2677,
            2678,2293,511,2662,2877,2878,2879,2981,2982,2983,
            2984,2985,2986,2987,2988,2989,2990,525,2996,2826,
            2827,2825,2880,2828,2824,2662,1,1636,2656,2668,
            230,502,263,1636,2889,2662,233,1,1,1697,
            2889,2831,2836,2835,2833,2834,2832,2837,2838,2830,
            2839,2840,2841,2992,2991,1319,1228,846,2662,1,
            1,2672,1,1,269,1636,2889,2662,2662,254,
            856,1821,2182,1656,1417,579,856,2671,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,2969,
            2667,2662,186,2673,4875,2674,4875,1434,856,3003,
            223,1673,131,62,67,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,2877,2878,2879,2981,2982,2983,2984,2985,
            2986,2987,2988,2989,2990,525,2996,2826,2827,2825,
            2880,2828,2824,2662,856,2662,1,1,2672,1,
            1,1445,1433,3004,3005,3007,3006,1081,185,2662,
            4991,3019,4991,301,2671,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,2969,2662,2182,1656,
            1417,579,1493,2662,782,2021,266,2289,61,132,
            2995,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,2877,
            2878,2879,2981,2982,2983,2984,2985,2986,2987,2988,
            2989,2990,525,2996,2826,2827,2825,2880,2828,2824,
            856,2662,2662,1,192,1,2662,1,2289,2995,
            2668,1802,2662,43,2673,207,2674,4992,1642,4992,
            300,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,2859,2182,1656,1417,579,49,254,1697,
            2889,856,2399,1,1697,2889,2662,71,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,65,2662,192,1,191,
            1,2667,51,1,50,812,2641,2399,2662,2399,
            1192,2662,2662,2673,1696,2674,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,2859,1171,1150,
            1129,1108,1087,1045,1066,1024,998,972,1323,2662,
            2388,2373,2668,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            677,2662,191,1,192,1,269,2289,55,2669,
            1,254,1,2668,2644,2388,2373,2388,2373,73,
            2662,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,2859,2662,352,1576,2666,351,1631,59,
            856,2995,1,2667,2995,91,2662,2637,1,1,
            1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,63,69,192,1,1697,
            501,52,2674,2662,2667,2662,523,2223,2670,2270,
            1606,209,2921,2673,2662,2674,2662,2124,2877,2878,
            2879,2981,2982,2983,2984,2985,2986,2987,2988,2989,
            2990,525,2996,2826,2827,2825,2880,2828,2824,271,
            2001,54,1717,1785,2665,53,91,523,2223,2270,
            1606,2662,1812,2270,1606,2831,2836,2835,2833,2834,
            2832,2837,2838,2830,2839,2840,2841,2992,2991,1319,
            1228,846,2662,337,2673,208,2674,603,1763,603,
            1,2669,119,856,2073,657,600,2662,829,1790,
            64,2662,2877,2878,2879,2981,2982,2983,2984,2985,
            2986,2987,2988,2989,2990,525,2996,2826,2827,2825,
            2880,2828,2824,2662,230,3003,2662,2662,1835,1920,
            234,2662,600,2662,1893,2650,130,2059,2662,2831,
            2836,2835,2833,2834,2832,2837,2838,2830,2839,2840,
            2841,2992,2991,1319,1228,846,2877,2878,2879,2981,
            2982,2983,2984,2985,2986,2987,2988,2989,2990,525,
            2996,2826,2827,2825,2880,2828,2824,1445,1433,3004,
            3005,3007,3006,1081,2662,1916,58,2662,57,2073,
            657,1,257,2831,2836,2835,2833,2834,2832,2837,
            2838,2830,2839,2840,2841,2992,2991,2662,1,5023,
            2672,5022,1,600,1,1,1,1,1,1,
            1,1,1,1,1,1,2671,2662,1,5023,
            2672,5022,1,600,1,1,1,1,1,1,
            1,1,1,1,1,1,2671,1488,2763,1412,
            1511,70,696,951,1593,1568,1736,1508,1618,1558,
            2504,1555,1817,1670,523,2223,523,2223,2763,1412,
            1511,2921,696,951,1593,1568,1736,1508,1618,1558,
            2504,1555,2662,1670,2662,1,5023,2672,5022,1,
            600,1,1,1,1,1,1,1,1,1,
            1,1,1,2671,2662,1,5023,2672,5022,1,
            600,1,1,1,1,1,1,1,1,1,
            1,1,1,2671,113,2763,1412,1511,2662,696,
            951,1593,1568,1736,1508,1618,1558,2504,1555,2662,
            1670,56,2662,829,2901,2763,1412,1511,2662,696,
            951,1593,1568,1736,1508,1618,1558,2504,1555,2662,
            1670,2662,1,5023,2672,5022,1,600,1,1,
            1,1,1,1,1,1,1,1,1,1,
            2671,2662,1,5023,2672,5022,1,600,1,1,
            1,1,1,1,1,1,1,1,1,1,
            2671,2662,2763,1412,1511,2662,696,951,1593,1568,
            1736,1508,1618,1558,2504,1555,1,1670,1,523,
            2223,254,2763,1412,1511,2659,696,951,1593,1568,
            1736,1508,1618,1558,2504,1555,2662,1670,2662,1,
            5023,2672,5022,1,600,1,1,1,1,1,
            1,1,1,1,1,1,1,2671,2662,1,
            5023,2672,5022,1,600,1,1,1,1,1,
            1,1,1,1,1,1,1,2671,2662,2763,
            1412,1511,68,696,951,1593,1568,1736,1508,1618,
            1558,2504,1555,2662,1670,2662,2921,202,2920,2763,
            1412,1511,2662,696,951,1593,1568,1736,1508,1618,
            1558,2504,1555,72,1670,2662,1,5023,2672,5022,
            1,600,1,1,1,1,1,1,1,1,
            1,1,1,1,2671,2662,1,5023,2672,5022,
            1,600,1,1,1,1,1,1,1,1,
            1,1,1,1,2671,2662,2763,1412,1511,293,
            696,951,1593,1568,1736,1508,1618,1558,2504,1555,
            1297,1670,1370,2021,2662,2662,2763,1412,1511,89,
            696,951,1593,1568,1736,1508,1618,1558,2504,1555,
            66,1670,20,2653,180,2653,272,2653,42,1344,
            812,2662,2662,1391,4996,2662,677,4996,30,208,
            30,2653,180,180,180,180,180,180,180,180,
            180,180,180,180,180,180,180,180,180,180,
            180,180,180,190,1255,2662,2653,1998,2662,186,
            856,2158,2662,2662,2662,1557,2673,133,2674,2358,
            4996,2675,2324,2309,2339,1705,1536,538,2676,2677,
            2678,2293,511,2691,4327,636,2653,2877,2878,2879,
            2981,2982,2983,2984,2985,2986,2987,2988,2989,2990,
            525,2996,2826,2827,2825,2880,2828,2824,134,2662,
            1557,2673,2662,2674,2358,4996,2675,2324,2309,2339,
            1705,1536,538,2676,2677,2678,2293,511,2877,2878,
            2879,2981,2982,2983,2984,2985,2986,2987,2988,2989,
            2990,525,2996,2826,2827,2825,2880,2828,2824,1,
            1557,2673,2666,2674,2261,2662,2675,2324,2309,2339,
            1705,1536,538,2676,2677,2678,2293,511,2662,190,
            190,2662,2662,2662,286,185,207,1669,2662,1557,
            2673,2666,2674,2280,880,2675,2324,2309,2339,1705,
            1536,538,2676,2677,2678,2293,511,2662,2662,2662,
            1,1,2662,2662,2662,2662,2662,2662,1557,2673,
            2666,2674,2358,1234,2675,2324,2309,2339,1705,1536,
            538,2676,2677,2678,2293,511,2662,2662,2662,2662,
            2665,1,1557,2673,29,2674,2358,4996,2675,2324,
            2309,2339,1705,1536,538,2676,2677,2678,2293,511,
            1669,2662,2662,2662,2662,2662,1,1557,2673,2665,
            2674,2358,4996,2675,2324,2309,2339,1705,1536,538,
            2676,2677,2678,2293,511,2674,2673,2662,2662,2662,
            2662,2662,2662,2662,2662,2662,1557,2673,2665,2674,
            2358,4996,2675,2324,2309,2339,1705,1536,538,2676,
            2677,2678,2293,511,1,1557,2673,29,2674,2358,
            2662,2675,2324,2309,2339,1705,1536,538,2676,2677,
            2678,2293,511,2662,2424,2673,2662,2674,2358,2672,
            2675,2324,2309,2339,1705,1536,538,2676,2677,2678,
            2293,511,2662,1557,2673,2671,2674,2358,2662,2675,
            2324,2309,2339,1705,1536,538,2676,2677,2678,2293,
            511,2662,2428,2673,2662,2674,2358,2662,2675,2324,
            2309,2339,1705,1536,538,2676,2677,2678,2293,511,
            249,2058,2662,2662,2877,2878,2879,2981,2982,2983,
            2984,2985,2986,2987,2988,2989,2990,525,2996,252,
            2877,2878,2879,2981,2982,2983,2984,2985,2986,2987,
            2988,2989,2990,525,2996,253,2662,2662,2662,2877,
            2878,2879,2981,2982,2983,2984,2985,2986,2987,2988,
            2989,2990,525,2996,2662,2877,2878,2879,2981,2982,
            2983,2984,2985,2986,2987,2988,2989,2990,525,2996,
            336,2662,2662,232,2662,2662,232,1,250,250,
            250,2662,250,1,251,251,251,335,251,232,
            231,32,1754,231,236,237,1,224,224,117,
            2662,2662,2688,2689,2668,2662,231,1,2668,2662,
            2672,2662,2672,224,224,117,2662,2662,2662,2662,
            2662,250,2662,2662,2662,232,2671,251,2671,2662,
            2662,2662,250,2662,2662,1470,2672,2662,251,2662,
            2662,2662,231,2662,232,232,2662,232,2662,224,
            224,250,2671,2662,2662,2662,2133,251,2662,2662,
            1847,231,231,2662,231,2662,2662,2662,2662,2662,
            117,224,224,1366,2662,2667,2662,2662,2662,2667,
            2662,2662,2662,2662,2662,2662,2662,2662,2070,2662,
            2662,2662,2662,757
        };
    };
    public final static char termAction[] = TermAction.termAction;
    public final int termAction(int index) { return termAction[index]; }

    public interface Asb {
        public final static char asb[] = {0,
            679,1,720,560,679,722,119,634,153,648,
            117,648,117,117,648,117,648,562,773,722,
            428,229,724,119,562,44,71,70,43,3,
            773,488,530,154,117,600,600,117,600,722,
            773,676,773,229,289,562,722,121,289,52,
            722,531,676,119,238,119,333,773,656,722,
            222,220,220,724,222,291,79,562,720,124,
            173,439,182,548,139,139,139,139,139,157,
            139,139,139,176,193,198,196,204,200,207,
            206,209,208,210,291,279,119,139,3,488,
            530,339,119,509,45,45,600,724,724,494,
            724,724,45,530,218,139,218,548,119,238,
            333,333,656,656,154,154,618,676,671,675,
            722,439,173,156,121,139,139,139,139,139,
            139,139,139,139,139,139,676,676,726,548,
            548,600,600,603,139,139,139,139,139,139,
            139,139,139,139,139,139,139,139,139,139,
            139,139,139,139,675,279,50,528,45,340,
            45,139,45,546,139,529,139,139,531,494,
            218,494,213,392,238,279,627,238,333,335,
            622,335,656,439,676,676,601,222,673,674,
            286,773,291,139,139,173,157,52,773,286,
            676,676,676,173,196,196,193,193,200,200,
            198,198,198,198,206,204,208,207,218,209,
            601,50,339,509,45,676,724,676,676,530,
            494,139,238,629,335,279,139,600,439,656,
            675,289,676,732,671,173,173,726,732,455,
            119,139,335,283,45,45,509,494,139,494,
            494,279,44,139,215,279,656,601,291,676,
            279,48,492,600,139,282,603,45,676,529,
            629,139,676,176,52,173,600,139,676,603,
            45,494,173,494,676,494
        };
    };
    public final static char asb[] = Asb.asb;
    public final int asb(int index) { return asb[index]; }

    public interface Asr {
        public final static byte asr[] = {0,
            115,0,36,57,20,58,71,37,59,38,
            60,61,39,21,62,63,35,72,40,73,
            64,65,22,66,67,68,2,4,23,24,
            25,26,27,28,29,69,30,31,32,70,
            33,34,77,55,19,3,0,3,76,44,
            82,1,7,14,15,16,2,4,11,12,
            10,5,8,9,17,18,13,6,0,1,
            3,75,77,55,74,19,44,0,36,57,
            20,58,71,37,59,38,60,61,39,21,
            62,63,35,72,40,73,64,65,22,66,
            67,68,23,24,25,26,27,28,29,69,
            30,31,32,70,33,34,2,4,6,0,
            81,3,35,20,21,22,23,24,25,26,
            27,28,29,30,31,32,33,34,14,15,
            16,2,4,11,12,10,5,8,9,17,
            18,13,1,7,0,35,11,12,10,5,
            8,9,17,18,13,1,2,4,7,14,
            15,16,81,3,0,44,1,82,102,11,
            12,77,105,106,107,108,109,111,110,112,
            113,114,5,83,84,8,9,79,78,85,
            86,87,88,89,90,10,91,92,93,76,
            103,104,81,74,3,55,19,75,0,7,
            1,3,6,75,77,55,74,19,94,95,
            96,42,97,98,99,100,0,36,57,20,
            58,71,37,59,38,60,61,39,21,62,
            63,35,72,40,73,64,65,22,66,67,
            68,2,4,23,24,25,26,27,28,29,
            69,30,31,32,70,33,34,41,3,76,
            0,77,44,82,0,5,1,44,74,3,
            36,57,20,58,71,37,59,38,60,61,
            39,21,62,63,35,72,40,73,64,65,
            22,66,67,68,2,4,23,24,25,26,
            27,28,29,69,30,31,32,70,33,34,
            80,0,2,4,3,76,55,0,117,45,
            46,57,47,48,49,58,101,71,59,50,
            51,52,60,61,53,62,63,13,72,54,
            73,64,65,43,66,67,68,7,14,15,
            16,4,116,6,17,18,75,80,81,76,
            69,70,56,42,94,95,96,97,98,99,
            100,82,102,11,12,10,8,9,83,84,
            78,79,85,86,87,88,89,90,91,92,
            93,103,104,77,105,106,107,108,109,110,
            111,112,113,114,55,44,74,36,37,38,
            39,35,40,2,3,5,19,1,20,21,
            22,23,24,25,26,27,28,29,30,31,
            32,33,34,0,10,5,8,9,83,84,
            78,79,85,86,87,88,89,90,91,92,
            93,103,104,75,105,106,107,108,109,110,
            111,112,113,114,81,74,76,6,3,55,
            19,77,0,46,48,6,52,54,49,43,
            50,51,47,45,53,42,56,41,13,7,
            14,15,16,2,4,1,11,12,10,5,
            8,9,17,18,19,3,0,115,101,76,
            46,48,6,52,54,49,43,50,51,47,
            45,53,42,56,41,3,19,13,7,14,
            15,16,11,12,10,8,9,17,18,5,
            1,71,72,73,65,57,62,60,61,59,
            58,63,64,66,67,68,70,69,40,37,
            35,36,39,34,33,23,24,25,26,27,
            28,29,30,31,32,20,21,22,38,4,
            2,0,13,7,14,15,16,4,1,11,
            12,10,5,8,9,17,18,2,74,3,
            0,3,55,76,77,0,19,3,5,2,
            1,75,0,65,57,62,60,61,59,58,
            63,64,66,67,68,70,69,75,19,40,
            37,35,36,39,38,20,21,22,23,24,
            25,26,27,28,29,30,31,32,33,34,
            5,2,1,44,55,74,3,0,115,36,
            57,20,58,71,37,59,38,60,61,39,
            21,62,63,35,72,40,73,64,65,22,
            66,67,68,4,23,24,25,26,27,28,
            29,69,30,31,32,70,33,34,41,19,
            3,5,2,1,0,3,74,5,1,44,
            0,36,57,20,58,71,37,59,38,60,
            61,39,21,62,63,35,72,40,73,64,
            65,22,66,67,68,2,4,23,24,25,
            26,27,28,29,69,30,31,32,70,33,
            34,80,5,0
        };
    };
    public final static byte asr[] = Asr.asr;
    public final int asr(int index) { return asr[index]; }

    public interface Nasb {
        public final static char nasb[] = {0,
            146,25,46,14,157,108,9,105,26,106,
            56,106,74,74,106,73,106,100,176,126,
            25,129,25,9,129,47,28,28,25,25,
            176,25,11,26,7,7,7,7,7,152,
            25,98,176,84,97,187,126,65,97,51,
            150,78,98,71,129,25,129,25,42,39,
            30,26,26,25,25,92,60,18,46,34,
            67,95,25,117,35,35,35,35,35,66,
            35,35,35,25,25,25,25,25,25,25,
            25,25,25,25,179,129,25,35,25,25,
            88,129,63,191,47,47,7,25,25,131,
            25,25,47,11,25,35,25,1,25,183,
            129,7,42,129,26,26,97,98,124,25,
            126,95,67,66,44,35,35,35,35,35,
            35,35,35,35,35,35,98,98,166,117,
            117,49,49,136,192,35,35,35,35,35,
            35,35,35,35,35,35,35,35,35,35,
            35,35,192,35,98,12,129,25,47,76,
            47,35,47,141,192,25,192,192,78,131,
            25,131,25,25,129,12,46,195,7,86,
            25,25,129,95,98,98,58,25,28,28,
            123,176,92,35,35,67,66,161,176,165,
            98,98,98,67,25,25,25,25,25,25,
            25,25,25,25,25,25,25,25,25,25,
            25,33,69,143,47,98,25,98,98,88,
            131,35,183,126,86,12,35,7,95,44,
            98,97,98,174,37,67,67,170,174,162,
            162,35,86,121,47,47,143,131,192,131,
            131,12,47,35,25,12,44,139,92,98,
            12,32,25,7,35,115,143,47,98,25,
            126,35,98,54,51,67,7,35,98,143,
            47,131,67,131,98,131
        };
    };
    public final static char nasb[] = Nasb.nasb;
    public final int nasb(int index) { return nasb[index]; }

    public interface Nasr {
        public final static char nasr[] = {0,
            91,89,88,81,87,86,1,0,113,0,
            2,51,0,42,45,2,107,91,90,89,
            88,81,87,86,0,69,0,52,0,114,
            0,109,61,2,6,0,67,66,42,48,
            45,39,0,26,0,2,15,0,97,0,
            6,61,0,130,0,122,0,138,0,2,
            24,53,25,0,2,6,46,0,118,0,
            123,0,125,94,0,139,0,2,24,1,
            32,99,0,137,0,85,0,32,1,75,
            51,2,24,0,82,0,2,22,0,81,
            76,77,78,79,71,54,0,44,2,50,
            42,48,45,0,134,0,2,63,31,0,
            132,0,22,67,66,48,42,45,2,0,
            1,32,2,33,0,2,121,0,117,0,
            24,53,2,70,0,135,2,24,0,48,
            50,42,45,44,39,0,2,24,110,0,
            6,61,59,0,22,66,67,2,0,67,
            66,39,0,2,24,39,60,0,126,2,
            24,0,102,2,63,0,24,2,136,0,
            15,2,31,0,2,63,95,0
        };
    };
    public final static char nasr[] = Nasr.nasr;
    public final int nasr(int index) { return nasr[index]; }

    public interface TerminalIndex {
        public final static char terminalIndex[] = {0,
            2,85,87,86,9,3,81,10,11,8,
            6,7,68,82,83,84,12,13,92,48,
            64,76,93,94,95,96,97,98,99,101,
            102,103,105,106,69,44,55,60,63,72,
            117,110,77,1,45,46,49,50,51,57,
            58,59,65,71,42,115,47,52,56,61,
            62,66,67,74,75,78,79,80,100,104,
            54,70,73,90,29,91,31,16,17,30,
            89,4,14,15,18,19,20,21,22,23,
            24,25,26,107,108,109,111,112,113,114,
            53,5,27,28,32,33,34,35,36,37,
            38,39,40,41,118,88,116
        };
    };
    public final static char terminalIndex[] = TerminalIndex.terminalIndex;
    public final int terminalIndex(int index) { return terminalIndex[index]; }

    public interface NonterminalIndex {
        public final static char nonterminalIndex[] = {0,
            123,0,0,0,0,125,129,130,131,132,
            133,134,135,136,122,137,138,139,140,0,
            0,120,141,150,146,158,0,0,0,0,
            124,142,145,0,0,0,0,0,0,0,
            0,180,0,183,207,119,177,179,0,181,
            121,182,149,157,0,0,0,168,128,178,
            0,144,172,191,194,195,196,0,206,0,
            160,0,184,190,148,161,162,163,164,167,
            169,189,193,127,0,152,153,154,155,156,
            159,165,166,0,171,176,126,143,147,151,
            0,170,174,0,0,175,185,188,198,203,
            0,0,205,209,0,0,211,213,0,0,
            0,0,0,173,0,186,187,192,197,0,
            199,200,0,201,202,204,208,210,212,0,
            0
        };
    };
    public final static char nonterminalIndex[] = NonterminalIndex.nonterminalIndex;
    public final int nonterminalIndex(int index) { return nonterminalIndex[index]; }

    public interface ScopePrefix {
        public final static char scopePrefix[] = {
            87,118,97,55,61,126,34,141,11,43,
            71,11,48,67,108,150,167,174,178,154,
            1,23,23,52,76,84,182,28,112,161,
            161,132,104,6,6,6,6,6
        };
    };
    public final static char scopePrefix[] = ScopePrefix.scopePrefix;
    public final int scopePrefix(int index) { return scopePrefix[index]; }

    public interface ScopeSuffix {
        public final static char scopeSuffix[] = {
            95,95,95,26,26,95,40,147,16,16,
            26,16,16,26,106,95,16,16,26,158,
            4,26,26,16,26,16,16,31,115,164,
            171,135,106,8,8,18,79,18
        };
    };
    public final static char scopeSuffix[] = ScopeSuffix.scopeSuffix;
    public final int scopeSuffix(int index) { return scopeSuffix[index]; }

    public interface ScopeLhs {
        public final static char scopeLhs[] = {
            78,76,78,52,52,76,59,36,45,68,
            52,44,68,52,95,25,7,6,6,20,
            44,134,133,66,52,42,4,109,95,8,
            6,37,95,45,44,45,50,44
        };
    };
    public final static char scopeLhs[] = ScopeLhs.scopeLhs;
    public final int scopeLhs(int index) { return scopeLhs[index]; }

    public interface ScopeLa {
        public final static byte scopeLa[] = {
            76,76,76,81,81,76,76,101,74,74,
            81,74,74,81,19,76,74,74,81,75,
            94,81,81,74,81,74,74,77,2,74,
            74,43,19,1,1,1,1,1
        };
    };
    public final static byte scopeLa[] = ScopeLa.scopeLa;
    public final int scopeLa(int index) { return scopeLa[index]; }

    public interface ScopeStateSet {
        public final static byte scopeStateSet[] = {
            120,120,120,95,95,120,26,11,106,99,
            95,106,99,95,5,9,34,34,34,64,
            106,1,3,99,95,106,34,92,5,37,
            34,11,5,106,106,106,108,106
        };
    };
    public final static byte scopeStateSet[] = ScopeStateSet.scopeStateSet;
    public final int scopeStateSet(int index) { return scopeStateSet[index]; }

    public interface ScopeRhs {
        public final static char scopeRhs[] = {0,
            119,162,0,254,0,159,0,1,139,0,
            190,119,1,159,0,139,0,1,119,190,
            139,0,179,44,0,163,0,248,119,0,
            77,197,0,202,246,119,6,178,0,168,
            247,0,190,119,1,183,0,190,119,1,
            0,200,1,0,140,35,225,119,44,0,
            140,225,119,35,44,0,140,35,44,0,
            140,225,119,44,0,140,44,0,1,119,
            243,139,0,175,1,0,202,222,119,6,
            118,242,71,0,168,0,202,222,119,6,
            242,71,0,180,0,132,0,241,119,180,
            0,119,180,0,241,132,0,218,119,6,
            240,118,239,198,0,218,119,6,239,198,
            0,150,49,0,43,1,148,139,132,0,
            150,139,148,1,52,0,101,150,0,216,
            119,6,0,148,104,136,0,75,140,0,
            201,1,0,139,125,0,201,1,13,0,
            139,176,0,238,1,123,0,148,44,123,
            0,148,1,0
        };
    };
    public final static char scopeRhs[] = ScopeRhs.scopeRhs;
    public final int scopeRhs(int index) { return scopeRhs[index]; }

    public interface ScopeState {
        public final static char scopeState[] = {0,
            1548,0,1583,0,2429,2505,2420,0,1412,853,
            1979,1952,1925,1898,1871,1844,1817,1529,1790,1763,
            1485,1736,1441,1414,0,791,636,1949,1689,612,
            2243,767,0,1705,1536,538,2243,2280,1717,829,
            677,812,2021,2182,1656,1417,579,2073,657,2270,
            1606,2223,523,2399,2388,2373,2358,2339,2261,2324,
            2309,2293,511,1391,791,1370,1344,1323,1297,1276,
            1255,1234,1213,925,1192,1171,1150,1129,1108,1087,
            1066,1045,1024,998,972,904,480,951,880,767,
            856,636,612,0,1707,974,707,581,2375,670,
            2289,1636,2318,1585,0,1648,520,2070,670,2007,
            1636,1995,1585,2172,2160,2058,1697,1547,0,480,
            675,1545,520,0
        };
    };
    public final static char scopeState[] = ScopeState.scopeState;
    public final int scopeState(int index) { return scopeState[index]; }

    public interface InSymb {
        public final static char inSymb[] = {0,
            0,237,141,119,252,119,224,203,33,204,
            198,205,73,72,206,71,207,208,119,1,
            2,162,159,224,244,217,165,159,210,167,
            119,161,6,1,239,211,211,242,211,177,
            156,175,119,119,1,119,55,44,1,77,
            177,119,186,118,6,118,6,156,5,177,
            254,95,94,100,139,119,253,119,141,35,
            140,119,124,1,13,18,17,9,8,5,
            10,12,11,123,126,128,127,130,129,133,
            131,135,134,136,119,6,178,5,167,161,
            216,56,42,53,45,47,51,50,43,49,
            54,52,149,6,48,46,118,119,240,119,
            6,119,5,156,1,1,1,190,141,191,
            119,119,140,225,199,114,113,112,110,111,
            109,108,107,106,105,77,201,148,180,1,
            1,102,82,1,44,84,83,5,78,79,
            9,8,90,89,88,87,86,85,91,10,
            93,92,104,103,243,119,6,3,117,119,
            148,119,118,1,1,150,1,1,119,75,
            179,75,215,118,6,218,180,219,119,222,
            118,223,156,119,186,186,119,139,183,184,
            1,119,55,225,35,140,5,139,119,1,
            201,201,238,148,127,127,126,126,129,129,
            128,128,128,128,131,130,134,133,148,135,
            55,119,256,170,187,148,43,148,148,216,
            75,55,119,119,222,202,77,55,119,199,
            255,1,200,119,177,140,140,177,119,139,
            139,75,246,119,117,187,132,139,1,139,
            139,218,241,75,175,202,199,55,119,190,
            202,55,248,82,44,249,132,187,148,150,
            55,75,190,168,77,179,82,44,187,132,
            139,101,179,139,187,139
        };
    };
    public final static char inSymb[] = InSymb.inSymb;
    public final int inSymb(int index) { return inSymb[index]; }

    public interface Name {
        public final static String name[] = {
            "",
            "[",
            "(",
            "{",
            ".",
            "->",
            "++",
            "--",
            "&",
            "*",
            "+",
            "-",
            "~",
            "!",
            "/",
            "%",
            ">>",
            "<<",
            "<",
            ">",
            "<=",
            ">=",
            "==",
            "!=",
            "^",
            "|",
            "&&",
            "||",
            "?",
            ":",
            "...",
            "=",
            "*=",
            "/=",
            "%=",
            "+=",
            "-=",
            ">>=",
            "<<=",
            "&=",
            "^=",
            "|=",
            ",",
            "$empty",
            "auto",
            "break",
            "case",
            "char",
            "const",
            "continue",
            "default",
            "do",
            "double",
            "else",
            "enum",
            "extern",
            "float",
            "for",
            "goto",
            "if",
            "inline",
            "int",
            "long",
            "register",
            "restrict",
            "return",
            "short",
            "signed",
            "sizeof",
            "static",
            "struct",
            "switch",
            "typedef",
            "union",
            "unsigned",
            "void",
            "volatile",
            "while",
            "_Bool",
            "_Complex",
            "_Imaginary",
            "integer",
            "floating",
            "charconst",
            "stringlit",
            "identifier",
            "Completion",
            "EndOfCompletion",
            "Invalid",
            "RightBracket",
            "RightParen",
            "RightBrace",
            "SemiColon",
            "__data",
            "__near",
            "__xdata",
            "__far",
            "__idata",
            "__pdata",
            "__code",
            "__bit",
            "__sfr",
            "__sfr16",
            "__sfr32",
            "__sbit",
            "__at",
            "__banked",
            "__interrupt",
            "__using",
            "__reentrant",
            "__critical",
            "__naked",
            "__wparam",
            "__shadowregs",
            "__preserves__regs",
            "__asm",
            "__endasm",
            "ERROR_TOKEN",
            "EOF_TOKEN",
            "]",
            ")",
            "}",
            ";",
            "identifier_token",
            "expression",
            "postfix_expression",
            "member_name",
            "type_id",
            "initializer_list",
            "unary_expression",
            "cast_expression",
            "multiplicative_expression",
            "additive_expression",
            "shift_expression",
            "relational_expression",
            "equality_expression",
            "and_expression",
            "exclusive_or_expression",
            "inclusive_or_expression",
            "logical_and_expression",
            "logical_or_expression",
            "assignment_expression",
            "expression_in_statement",
            "expression_list_actual",
            "constant_expression",
            "statement",
            "compound_statement",
            "block_item_list",
            "block_item",
            "declaration",
            "declaration_specifiers",
            "init_declarator_list",
            "simple_declaration_specifiers",
            "struct_or_union_declaration_sp" +
            "ecifiers",
            "elaborated_declaration_specifi" +
            "ers",
            "enum_declaration_specifiers",
            "typdef_name_declaration_specif" +
            "iers",
            "no_type_declaration_specifier",
            "type_qualifier",
            "no_type_declaration_specifiers",
            "simple_type_specifier",
            "struct_or_union_specifier",
            "elaborated_specifier",
            "enum_specifier",
            "type_name_specifier",
            "init_declarator",
            "complete_declarator",
            "initializer",
            "declarator",
            "struct_or_union",
            "struct_declaration_list",
            "struct_declaration",
            "specifier_qualifier_list",
            "struct_declarator_list",
            "complete_struct_declarator",
            "enumerator_list",
            "enumerator",
            "direct_declarator",
            "pointer_seq",
            "array_direct_declarator",
            "basic_direct_declarator",
            "knr_direct_declarator",
            "array_modifier",
            "function_direct_declarator",
            "parameter_type_list",
            "function_declarator",
            "identifier_list",
            "knr_function_declarator",
            "array_modifier_type_qualifiers",
            "type_qualifier_list",
            "parameter_list",
            "parameter_declaration",
            "complete_parameter_declarator",
            "abstract_declarator",
            "direct_abstract_declarator",
            "basic_direct_abstract_declarat" +
            "or",
            "array_direct_abstract_declarat" +
            "or",
            "initializer_seq",
            "designated_initializer",
            "designation",
            "designator_list",
            "designator",
            "external_declaration_list",
            "external_declaration",
            "declaration_list",
            "function_body",
            "absolute_address",
            "original_function_direct_decla" +
            "rator",
            "sdcc_function_attributes",
            "sdcc_function_attribute",
            "preserves_regs_args",
            "preserves_regs_arg",
            "oldasm_contents",
            "oldasm_content"
        };
    };
    public final static String name[] = Name.name;
    public final String name(int index) { return name[index]; }

    public final int originalState(int state) {
        return -baseCheck[state];
    }
    public final int asi(int state) {
        return asb[originalState(state)];
    }
    public final int nasi(int state) {
        return nasb[originalState(state)];
    }
    public final int inSymbol(int state) {
        return inSymb[originalState(state)];
    }

    /**
     * assert(! goto_default);
     */
    public final int ntAction(int state, int sym) {
        return baseAction[state + sym];
    }

    /**
     * assert(! shift_default);
     */
    public final int tAction(int state, int sym) {
        int i = baseAction[state],
            k = i + sym;
        return termAction[termCheck[k] == sym ? k : i];
    }
    public final int lookAhead(int la_state, int sym) {
        int k = la_state + sym;
        return termAction[termCheck[k] == sym ? k : la_state];
    }
}
